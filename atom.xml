<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Kinopyo Blog]]></title>
  <link href="http://kinopyo.com/atom.xml" rel="self"/>
  <link href="http://kinopyo.com/"/>
  <updated>2015-04-15T20:49:53+09:00</updated>
  <id>http://kinopyo.com/</id>
  <author>
    <name><![CDATA[Qihuan Piao]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Reading Materials For OOCSS, BEM And SMACSS]]></title>
    <link href="http://kinopyo.com/blog/reading-materials-for-oocss/"/>
    <updated>2015-04-15T20:16:00+09:00</updated>
    <id>http://kinopyo.com/blog/reading-materials-for-oocss</id>
    <content type="html"><![CDATA[<p>After all these years of web development I still haven&#8217;t found a compelling way to organize and name css, once we all seemed to agree with the semantic naming methodology but as the project grows the magic aura disappears.</p>

<p>Recently my team has started the transition to apply OOCSS, SMACSS and BEM techniques to current project. I tried it a while and really think this is the best way so far to cleanly organize your css(code and files), make it scalable and reusable, with simple intuitive naming methomelodgy.</p>

<h2>Recommendations</h2>

<p>Here are the reading materials I found pretty easy to follow:</p>

<p><a href="https://mattstauffer.co/blog/organizing-css-oocss-smacss-and-bem">Organizing CSS: OOCSS, SMACSS, and BEM - MattStauffer.co</a></p>

<p>High level introduction to each terms, with simple example. Read it and you&#8217;ll get the big picture.</p>

<br>


<p><a href="http://csswizardry.com/2013/01/mindbemding-getting-your-head-round-bem-syntax/">MindBEMding – getting your head ’round BEM syntax – CSS Wizardry – CSS, OOCSS, front-end architecture, performance and more, by Harry Roberts</a></p>

<p>Have an excellent guide on when to use BEM and not.</p>

<br>


<p><a href="http://blog.planetargon.com/entries/2014/1/7/the-pros-and-cons-of-modular-sass">The Pros and Cons of Modular Sass — Planet Argon Blog</a></p>

<p>Great article on the idea behind modular css in general. And the argument over semantic class names convinced me.</p>

<blockquote><p>Semantic markup is important in communicating the meaning of a webpage and is only becoming increasingly important; however, class names are for the developer. The exception to this relates to the use of microformats, in which case it is necessary to use specific semantic class names. It’s always important to consider names and what they communicate to you, your team, and future developers, but there is no dogmatic reason to avoid classes like “grid-1” or “pull-left” just because they describe presentation. People have conflated the use of semantic HTML (which relates to optimizing content for assistive technologies, browsers, the multitude of devices, and software that recontextualizes and reframes your content) with avoiding presentational class names for years, and I’m not quite sure why.</p></blockquote>

<p><a href="http://mikefowler.me/2013/10/17/support-for-bem-modules-sass-3.3/">Support for BEM modules in Sass 3.3 | Mike Fowler</a></p>

<p>How to write BEM in Sass.</p>

<br>


<p><a href="http://fullstackradio.com/episodes/1/">Full Stack Radio - 1: Matt Stauffer - CSS Semantics</a></p>

<p>A podcast. You&#8217;ll get more out of it if you already some idea and experience about these terms, as in the podcast there&#8217;re deep discussions on the very details of daily development.</p>

<br>


<p>That&#8217;s it. Hope this could help you find your starting point.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[My First Personal Quarterly Off-site]]></title>
    <link href="http://kinopyo.com/blog/my-first-personal-quarterly-off-site/"/>
    <updated>2015-04-12T22:32:00+09:00</updated>
    <id>http://kinopyo.com/blog/my-first-personal-quarterly-off-site</id>
    <content type="html"><![CDATA[<h2 class="lead">Get Yourself Back In The Busy World</h2>


<p>I tend to believe I know what I&#8217;m doing, where I&#8217;m going, I&#8217;m in the control of my life, but that&#8217;s not the truth and it&#8217;s really easy to derail from the path you committed to go by living with a demanding work and all sorts of unknown encounters.</p>

<blockquote><p>The most dangerous thought you can have as a creative person is to think you know what you&#8217;re doing. - Alan Key</p></blockquote>

<p><img src="http://cdn.kinopyo.com/images/coffee_and_ipad.jpg" alt="" /></p>

<p>I think I found a good way to organize and regain the control of it.</p>

<h2>Review For Yourself</h2>

<p>If you work on a corporate company you must be familiar with the annual or quarterly performance review and evaluation, often times it&#8217;s mandatory, and it&#8217;s officially scheduled in your and your organization&#8217;s calendar. Process varies but I always feel that&#8217;s not really reflecting myself, that&#8217;s only a tiny part of the professional work, why don&#8217;t I do it for myself not for anyone else, to tru?</p>

<p>So last Friday I took one day off for this &#8220;Personal Quarterly Off-site&#8221;, to review my last 90 days of personal and professional life and set goals and plans for next 90 days. The end result was so great, I got way more than I expected, never thought I could get that much out of myself. Besides the basic concept, I&#8217;ll also share the process and tips I found that works for me.</p>

<h2>What Is Personal Quarterly Off-site</h2>

<p>I heard it from the <a href="http://michaelhyatt.com/season-3-episode-12-the-disciplined-pursuit-of-less-podcast.html">podcast</a>, Greg McKeown the author of the best selling <a href="http://www.amazon.com/dp/0804137382/">Essentialism: The Disciplined Pursuit of Less</a>, which is one of my favorite, introduced his idea of it.</p>

<blockquote><p>Every 90 days, you take a day. You evaluate what you’ve been doing during the last 90 days. You have what I call the most important hour of your life, which is when you go through a set of questions. Then you set your (very few) goals for the next 90 days to make sure you’re in alignment with what you really want to do ultimately with your life. This is it.</p></blockquote>

<h2>Strategy 1: Schedule it</h2>

<p>This is the first step and perhaps the most important step. I didn&#8217;t do it immediately after I heard the idea, even though I felt interesting. I intentionally scheduled it for 1 week later, and told my boss I&#8217;m gonna that day off in advance.</p>

<p>Until that day I chose some of my favorite podcasts, book highlights and  articles to read related to the topic, by consciously telling myself, that day is coming and I&#8217;m gonna do some serious work, I was able to let my brain be prepared subsconciously. It builds up the right mindset in the downtime too. I also shared that schedule to get some peer pressure.</p>

<p>One thing needs to mention, very soon there&#8217;s a deadline in my current project, it wasn&#8217;t easy to bring it up in this season and I did feel somehow guilty about being absent while others working hard to meet the deadline. But let&#8217;s admit there&#8217;s no perfect time you could work less, there&#8217;s always something that needs you to look at, but only you can be responsible for yourself, in professional and personal. So this time I was bold enough to take the chance.</p>

<h2>Strategy 2: Set the Environment Right</h2>

<p>How many notifications do you get every single day? It&#8217;s so easy to &#8220;connect&#8221; to something that doesn&#8217;t really matter at that time but &#8220;disconnect&#8221; to something you really want to focus. So strategy No.2 is to turn off your phone. It&#8217;s easy to turn on the &#8220;Do Not Disturb&#8221; mode in iPhone.</p>

<p>Then go to somewhere you&#8217;re familiar with, where you won&#8217;t be disturbed by new &#8220;discoveries&#8221;, like the big SALE label in the store, or completely lost that you have to look up your phone to locate yourself. Maybe one of your favorite cafe would be the best at first. I found it&#8217;s easy for me to concerntrate and get serious work(thinking) done when I&#8217;m in the place where I&#8217;m really familiar with. It helps me to build up the routine and get into the &#8220;zone&#8221; so be conscious about the place would be helpful next time.</p>

<h2>Strategy 3: Be a Journalist</h2>

<p>The key point is to become a journalist, to ask good questions to yourself that drive you to focus on the essential area of your life, and <strong>don&#8217;t rush to answer them first.</strong></p>

<p>Often times as an engineer when I hear a concern, issue or trouble I tend to quickly response with a possible solution. But this time I need to shut down that if-then thinking, to allow myself to dig deeper, pause and think more. I think you&#8217;ll be surprised too how much you could get just by pausing for a while.</p>

<p>Here are the questions I asked to myself:</p>

<ul>
<li>For the last 90 days, What is the news in your life?</li>
<li>What are the top 3 things bothering you the most?</li>
<li>Where are you spending your time and resource?</li>
<li>What is essential to you?

<ul>
<li>Identify your roles</li>
</ul>
</li>
<li>If you have full control of a weekday, what would you do?</li>
<li>What is your main focus and goal for the next 90 days? List 3.</li>
<li>What are the top 3 things you know for sure those are gonna improve you, make you grow, but you aren&#8217;t doing? What&#8217;s holding you back?</li>
</ul>


<p>I had some blur images but I definitely didn&#8217;t prepare all questions, most of them were improvised at the time, or should I say I plant the idea 1 week ago and had exactly what I expected.</p>

<h2>Strategy 4: Set A Timer</h2>

<p>I set a timer for 2 hours before I started writing the first question. When I finished I was right on time and I felt that&#8217;s the right amount of time needed.</p>

<p>It&#8217;s not a competition, it&#8217;s not more you write/ask/answer the more you gain. The process and experience is sharable but the end result is not, it&#8217;s for yourself, so don&#8217;t try to get more done during the process. Remember the &#8220;Less But Better&#8221; principle.</p>

<h2>Strategy 5 Digital-less</h2>

<p>I did this with a real pen and notebook. Even though I turned on &#8220;Do Not Disturb&#8221; on my phone, and I did bring an iPad with me, I still like the feeling of writing on physical paper.</p>

<p>It&#8217;s easy to get distracted on digital devices. For me I always care about the styling, spelling and using <em>the right tool</em>, which really doesn&#8217;t matter that much.</p>

<p>Plus the physical note has a limitation, you can&#8217;t write endlessly on one page, which conversely set a boundary to keep you on the right course. I brought a B5 size kinda small notebook in which I tend to answer each question within 1 page, that limitation forces me to describe more precisely and not to bring up everything. Compare to that digital note is border-less and &#8220;cheap&#8221;, even though it shows Page 1 and Page 2, navigation is so &#8220;effortless&#8221; that it won&#8217;t occur to you that you have written &#8220;too much&#8221;.</p>

<h2>Strategy 6: Reschedule It for the next time</h2>

<p>After I finished it I felt much better, I&#8217;ve dumped lots of concerns and worries, set only few goals for the next 90 days, moved some of the actionable items to OmniFocus(my GTD/TODO app). The next thing I did was to schedule the next Personal Quarterly Off-site on my calendar, to reinforce the benefits of Strategy 1 and be more aware the importance of having such kind of self retrospective day.</p>

<h2>Final Thoughts</h2>

<p>Although whole thinking and writing process only took 2 hours to finish, I still think utilizing that whole day to build up the mindset, to allow yourself to pause, to wander is critical for creativity. If you feel like you&#8217;ve got lots of tasks done but not moving towards your goal, maybe it&#8217;s time to do something good for yourself.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Notes on Making Peace with an Unexpected Life]]></title>
    <link href="http://kinopyo.com/blog/notes-on-making-peace-with-an-unexpected-life/"/>
    <updated>2015-03-18T09:08:00+09:00</updated>
    <id>http://kinopyo.com/blog/notes-on-making-peace-with-an-unexpected-life</id>
    <content type="html"><![CDATA[<p>Sharing some takeaways of my favorite podcast, <a href="http://michaelhyatt.com/season-3-episode-09-making-peace-with-an-unexpected-life.html">SEASON 3, EPISODE 9: MAKING PEACE WITH AN UNEXPECTED LIFE</a>, hope this would help me and others to feel a bit better in the unexpected, unknown life.</p>

<blockquote><p>Sometimes you have to make room for what’s unexpected because there’s a miracle there. - MICHELE CUSHATT</p></blockquote>

<div class="video-container">
    <iframe width="560" height="315" src="https://www.youtube.com/embed/DZNAf8Yvu0U" frameborder="0" allowfullscreen></iframe>
</div>


<h2>Gratitude</h2>

<p>My favorit part starts from 9:52.</p>

<blockquote><p>There have been quite a few ups and downs and twists and turns. Well, gratitude in many ways is my lifeline, <strong>because when you’re in a position where you’ve lost so much, where every time you turn around you’re losing something else, it can be very easy to focus on all that’s gone.</strong> I mean, it’s like you just look around and see carnage everywhere you look. You see all of these different things you’ve lost, things you will never get back, and there’s so much grief that’s a part of that.</p>

<p><strong>The only way to push through grief really is to eventually come to some place where you see what you still have left.</strong> So I can either focus on all that I’ve lost or start to identify and recognize what I still have.</p>

<p>That’s not easily done. So I don’t want it to sound trite. I mean, that’s work. That’s serious work, but part of my surgery meant I lost some function of speech. I lost some function of eating ability. I lost my ignorance, being able to naively live, thinking that cancer wouldn’t happen to me, that it only happens to other people. I lost all of those things, which were huge things to grieve. They were massive.</p>

<p>Or I could focus on the fact that, gosh, I have two legs that can go outside and go for a walk, and I have a family. How many people don’t have a family to support them through things like this? I live in the United States, where I have access to great healthcare. How many people don’t have that? I could just start making a list of all of the ways I was incredibly blessed. What it did was just kind of weigh the scales differently, so rather than it being such a huge weight of how much I’d lost, now all of a sudden the scales weighed pretty heavily with what I still had.</p></blockquote>

<h2>This Is Bigger Than Me. I Need Some Help.</h2>

<blockquote><p>One thing I want to say on that topic is that my thought was that I was weak. The fact that I had to do this meant that I wasn’t strong enough. The question I kept asking myself was, “What’s wrong with you, Michele, that you can’t do this? What’s wrong with you?”</p>

<p>That wasn’t the right question. I eventually learned how to be a little kinder to myself. “Well, of course you’re exhausted. Look what has happened.”, “Look what you’ve been through.”, “Look what has gone on.” To offer that grace to yourself a little bit more and understand that <strong>true strength is being willing to say, “Okay, this is bigger than me. I need some help,” is important.</strong></p></blockquote>

<h2>Overall Whole</h2>

<blockquote><p>If we look at just one particular chapter, one particular scene, we can get really overcome with the weight of what’s happening in that moment, but if we can step back and see the overall transition and flow of the story that’s taking shape in our lives, all of a sudden it becomes something that’s quite a beautiful piece of art. But you just can’t look at it one slice at a time. You have to see the overall whole, and when you do, you’ll realize there is an artist who’s weaving all things together for some kind of glorious end, and you get to experience it, but you have to step back and take that kind of vantage point.</p></blockquote>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[古巨基唱出的匆匆那年]]></title>
    <link href="http://kinopyo.com/blog/gu-ju-ji-chang-chu-de-cong-cong-na-nian/"/>
    <updated>2015-02-19T09:26:00+09:00</updated>
    <id>http://kinopyo.com/blog/gu-ju-ji-chang-chu-de-cong-cong-na-nian</id>
    <content type="html"><![CDATA[<p>匆匆那年的电影我是有去国内的电影院看过的，可惜当时正片刚结束伴随着王菲的匆匆那年，辛勤的工作者们就迅速的开启灯光并挥手指示“出口在这边！”就把观众给疏散掉了，没机会好好听一听。</p>

<p>后来听到古巨基在《我是歌手》里演绎了男声版的匆匆那年，觉得真的是很有感情。用她的话讲就是，王菲唱出的是经历后的美丽，而古巨基唱出的是经历中的痛苦。古巨基谈这首歌的时候说，关键词就是两个字，遗憾。歌词很美，中文很美，故事很美，却是美的遗憾。</p>

<div class="video-container">
    <iframe width="560" height="315" src="https://www.youtube.com/embed/1u6v7eIaO1I?rel=0" frameborder="0" allowfullscreen></iframe>
</div>




<div>
匆匆那年<br> <br>(电影《匆匆那年》主题曲) <br>作词：林夕<br>作曲：梁翘柏 <br>演唱：王菲<br> <br>匆匆那年我们究竟说了几遍 <br>再见之后再拖延<br>可惜谁有没有爱过不是一场 <br>七情上面的雄辩<br>匆匆那年我们一时匆忙撂下<br>难以承受的诺言 <br>只有等别人兑现<br><br>不怪那吻痕还没积累成茧<br>拥抱着冬眠也没能羽化成仙<br>不怪这一段情没空反复再排练<br>是岁月宽容恩赐反悔的时间<br><br>如果再见不能红着眼 <br>是否还能红着脸<br>就像那年匆促刻下永远一起 <br>那样美丽的谣言<br>如果过去还值得眷恋 <br>别太快冰释前嫌<br>谁甘心就这样 <br>彼此无挂也无牵<br>我们要互相亏欠<br>要不然凭何怀缅<br><br>匆匆那年我们见过太少世面 <br>只爱看同一张脸<br>那么莫名其妙那么讨人欢喜 <br>闹起来又太讨厌<br>相爱那年活该匆匆因为我们<br>不懂顽固的诺言 <br>只是分手的前言<br><br>不怪那天太冷泪滴水成冰<br>春风也一样没吹进凝固的照片<br>不怪每一个人没能完整爱一遍<br>是岁月善意落下残缺的悬念<br><br>如果再见不能红着眼 <br>是否还能红着脸<br>就像那年匆促刻下永远一起 <br>那样美丽的谣言<br>如果过去还值得眷恋 <br>别太快冰释前嫌<br>谁甘心就这样彼此无挂也无牵<br>如果再见不能红着眼 <br>是否还能红着脸<br>就像那年匆促刻下永远一起 <br>那样美丽的谣言<br>如果过去还值得眷恋 <br>别太快冰释前嫌<br>谁甘心就这样彼此无挂也无牵<br>我们要互相亏欠<br>我们要藕断丝连
 </div>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Sorry I Failed to Give You A Complete Family]]></title>
    <link href="http://kinopyo.com/blog/sorry-i-failed-to-give-you-a-complete-family/"/>
    <updated>2015-02-10T08:38:00+09:00</updated>
    <id>http://kinopyo.com/blog/sorry-i-failed-to-give-you-a-complete-family</id>
    <content type="html"><![CDATA[<p>&#8220;Sorry I failed to give you a complete family&#8221;. I heard it from both my mom and dad, from time to time.</p>

<p>Every time I go back China, I&#8217;m actually scared in some level to spend nights with either of them. I could sense it, &#8220;Oh my god he/she is gonna bring that again&#8230;&#8221;, then we all drowned in the emotional flood.</p>

<p>Although I do refer to them as a convenient &#8220;excuse&#8221;(joke) for my inappropriate behavior or inability of communication, in my heart I never ever blame them for anything. But as parents with good will and intention, I guess they may never forgive themselves, I don&#8217;t like to see that kind of face&#8230;</p>

<p>Writing these because I had a dream this morning, for the 30 years in my life it is the first time to have such a dream seeing them being together, happy, smiling, doing things together, worrying about my marriage(this part is so real hah), I just can&#8217;t forget that warm feeling. If one day human technology is developed enough to make a machine that could control your dream, I might surrender to that.</p>

<p>Phew, what an emotional morning! And I won&#8217;t surrender! I was just being weak for now. And no such thing as a &#8220;functional family&#8221; so take it easy :)</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[One Pitfall About Saving Money]]></title>
    <link href="http://kinopyo.com/blog/one-pitfall-about-saving/"/>
    <updated>2015-01-02T09:29:00+09:00</updated>
    <id>http://kinopyo.com/blog/one-pitfall-about-saving</id>
    <content type="html"><![CDATA[<p>I consider myself strict at spending money. I would choose a station in 20 minutes walk distance over a 3 minutes one just to save less than 200 JPY yen. I would  bypass a vending machine even though I’m thirsty but not buying a bottle of water. I would go into bathroom without turning on the light, and choose wearing more clothes rather than turning on underfloor heat to save electricity expense, the list goes on and on… (most of these habits are inherited from my parents, saving money is like a gene inside their body)</p>

<p>Some time ago I randomly picked up a book in bookstore, one chapter was about saving money. Can’t remember the exact word, but the general idea is this:</p>

<blockquote><p>People who have the habits of saving money, tend to buy more and/or expensive stuff than they need, have low resist to the temptation, because they don’t know the joy of spending money, they think they have been suffered enough that they so <em>deserve</em> to have that one item.</p></blockquote>

<p>That rings a bell. I do remember I say something like that to myself in the past when struggling with buy or not buy situation.</p>

<p>“Come on you’ve been working so hard, you definitely deserve this!”</p>

<p>“Look at others, see how they’ve spent money on drinks, clothes, parties, no harm to indulge yourself a bit this time!”</p>

<p>“It’s 50% off sale, you’ve got to buy something for yourself right?!”</p>

<p>And things I’ve bought under that mindset usually turns out to be a total waste: either I don’t like it, not using it anymore(like clothes), or over spec that’s higher than my need(pc parts).</p>

<p>Since I realized this pitfall, I’ve been really conscious about the conversations with myself. <strong>I stopped using the word “deserve”.</strong> Now it looks like this: “I choose to spend the money because of …, so that I could …, I’m 100% it’ll contribute to my …, I know it’s a clear YES, it’s a worthwhile investment, not because I deserve it, not because it’s on 30%, 50% or even 80% sale, not because I feel shy to say NO.”</p>

<p>I could be spending <em>more</em> money overall on food, books, self investment now than before, but that’s my rational choice &amp; investment under conscious mind, with a purpose on health, learning, and self growth. <strong>Most importantly, I don’t feel the urge to indulge myself, the guilty when spending money anymore.</strong></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Review 2014]]></title>
    <link href="http://kinopyo.com/blog/review-2014/"/>
    <updated>2015-01-02T00:40:00+09:00</updated>
    <id>http://kinopyo.com/blog/review-2014</id>
    <content type="html"><![CDATA[<p>2014 has passed, this is the perfect season to write a personal review post. This one is organized in the perspective of family, relationship, friends work and self development.</p>

<h2>Family</h2>

<p>At the end of 2014 I took some day off and came back to China to visit my mom and dad. Probably 3 years since our last met.</p>

<p>As always my mom prepared <em>everything</em> for me: new clothes and coat, cloves, shoes(-20 degree in my hometown), good foods, money for me to use here… She kept all the gifts in the perfect shape I gave her before, always seek to connect, always support me… Amazingly I really can’t find any flaws from her as a mother, she’s perfect.</p>

<p>My dad is the same, so <em>unique</em> in his own way… I’m not a good talker just like him, we don’t talk that much, and don’t feel the urge to, which made me really relaxed, felt home. Sometimes I take the initiative and tell him my life in Tokyo, and after my talk he either suddenly leaves without a comment or change the subject completely to something he wants to talk about… And we’re totally fine about spending the time separately even though we’re in the same room, he checks his computer while I write blog, just like the old days.</p>

<p>Strangely for one moment I dreamed about, what if, what if they didn’t get divorced, how would it look like now? What if I look at the left there’s my mom, and turn right there’s dad? I know it’s 200% impossible already, but this is the first time for the last 10+ years I imagined such scene and I kinda want to say, “please don’t wake me up”.</p>

<h2>Relationship</h2>

<p>I remember early 2014 we were sitting at the dining table in our brand new house, having afternoon tea and cakes, enjoying the beautiful view from 27th floor and sharing stories to each other. That was such a peaceful picture in my memory, I wish I could freeze the time forever, I thought after all these years we finally managed to get the harmony moment, but we didn’t.</p>

<p>After that our relationship hit the bottom, it was the darkest time for me. I suffered a lot from distrust, every couple have fights and may even say some harsh words too, but nothing hurt more than distrust. I felt my character, loyalty and integrity was doubted, it made me feel all the things I had been fighting for was nothing, worthless. I started to ask the wrong questions. “Why me? Why shit things always happen to me? Why I can’t have a peaceful day? I’m not a perfect boyfriend but also not a bad guy shouldn’t I deserve a little better? Why I did nothing but is treated like I was cheating on her? It’s so unfair why?”</p>

<p><strong>Question shifts focus.</strong> Asking the wrong questions could only   drive you crazy, making all possible negative impacts, so stop. <strong>Pain is a powerful tool, if you can make good use of it.</strong> There’s a technique introduced in the book “Awaken the Giant Within”, saying if you want to quit your bad habit, you should link massive pain to that. In my case this trust issue was such a huge pain for me I don’t want to experience it anymore, ever. So I tweaked the questions like this:</p>

<p>“What’s the root cause? Am I misbehaved? Or lack of communication makes me appear suspicious? Is it related to our past issue? Is it her issue? Is it fixable? What could I do now on my side? What are my choices?”</p>

<p>Immediately my focus shifted to the present, and helped me made a big decision then. I’ll leave all that pain to 2014, 2015 I will have a better, brighter life.</p>

<h2>Friends</h2>

<p>I like to hang out with friends, but not doing good job at inviting them. Always reluctant to send the message. 8:00 AM, maybe they’re on the train. 10:00 AM they must be working. 12:00 AM they’re probably having lunch with colleagues. 6:00 PM, hmm maybe working hard to get things done. 8:00 PM maybe they’re enjoying dinner with family/friends. 10:00 PM maybe too late… I’m such a genius to find no good time to contact during a whole day lol!</p>

<p>And even though I’ve been living in Tokyo for 7 years, I still don’t get the distance with Japanese friends(not those have experience abroad). I consider some are good friends, but not sure how they feel about me, the distance is still there. Don’t get me wrong they’re good people, polite and kind, but that also confused me about where we are, and how to develop it to the next level.</p>

<p>On the contrary, I’m glad the “gaijin” group get together regularly. BBQ, Chicago Pizza, fireworks, Bounenkai. The psychological guard is low, people are more open, more casual, easier to talk to.</p>

<p>Also appreciate my friends in China. Every time I come back, they all manage to come no matter how busy they’re, give me the welcome party and farewell party within 1 week, I’m flattered. I’ve known each other for over 10 years, I’ve seen them from slim to fat hah, from a boy to a father, yet we still drink like a teenage, talk in the same way, as if time never passed us.</p>

<h2>Work</h2>

<p>One big challenge was building Cooksnaps widget which is integrated to food blogs with fancy features like user login, browse and like cooksnaps, leave comments, auto post to facebook  wall, admin tools to manage visibilities, etc. I did heavy javascript project before but this time is different. It’s a 3rd party javascript widget running on the food bloggers blog, the code is part of a rails project. Challenging but fun! <a href="http://www.amazon.co.jp/gp/product/1617290548?aToken=5%7Cuuq49ZVp7MEO9i9Au2s%2Fbo1yGsCLQvwV4fUIaoMceCst6zYl%2FdRwnhhXIqbPm6wi2M4IUbFTXvKVGmog6cyUSWNUsJEC%2FX%2FYzI9coSU%2BYNDRfpbr3iSgw5IeZrwrNy2HXvEp2qu31JOswUQjzfJIH3XqBy26CHkOyyfPucmoR0aKQsNZGk7AP%2Br8DNdR7QIHQCKG0hNRXDxr8f%2Bt2DHtxT%2Bnk5nRZ9sPA7GHdRtpN04%3D&amp;openid.assoc_handle=amzn_associates_jp&amp;openid.claimed_id=https%3A%2F%2Fwww.amazon.co.jp%2Fap%2Fid%2Famzn1.account.AHPYXWO7BRMZJA5MI5V7OUF3I7XQ&amp;openid.identity=https%3A%2F%2Fwww.amazon.co.jp%2Fap%2Fid%2Famzn1.account.AHPYXWO7BRMZJA5MI5V7OUF3I7XQ&amp;openid.mode=id_res&amp;openid.ns=http%3A%2F%2Fspecs.openid.net%2Fauth%2F2.0&amp;openid.ns.pape=http%3A%2F%2Fspecs.openid.net%2Fextensions%2Fpape%2F1.0&amp;openid.op_endpoint=https%3A%2F%2Fwww.amazon.co.jp%2Fap%2Fsignin&amp;openid.pape.auth_policies=http%3A%2F%2Fschemas.openid.net%2Fpape%2Fpolicies%2F2007%2F06%2Fnone&amp;openid.pape.auth_time=2015-01-01T03%3A10%3A17Z&amp;openid.response_nonce=2015-01-01T03%3A10%3A17Z14966822886736948&amp;openid.return_to=https%3A%2F%2Fwww.amazon.co.jp%2Fgp%2Fproduct%2F1617290548%3Fie%3DUTF8&amp;openid.sig=xYlzI2W798ZfZrLpqyLFD3Mdvf50fQ92PBQZbq90QhA%3D&amp;openid.signed=assoc_handle%2CaToken%2Cclaimed_id%2Cidentity%2Cmode%2Cns%2Cop_endpoint%2Cresponse_nonce%2Creturn_to%2Cns.pape%2Cpape.auth_policies%2Cpape.auth_time%2Csigned&amp;redirect=true&amp;serial=">Third-Party Javascript</a>, this book written by Disqus engineers helped a lot!</p>

<p>Another big project is Cookpad global, it’s like a database-less rails app, we’re using API to transfer all the data we needed. At first we were using a gem called <a href="https://github.com/remiprev/her">Her</a> to let the model have ActiveRecord like interface, but due to performance problems and lack of maintenance we shifted to <a href="https://github.com/balvig/spyke">spyke</a>.</p>

<p>Oh and almost forgot that I switched to VIM from Sublime Text, felt like long long time ago :) The transition phase didn’t take long, I used <a href="https://github.com/carlhuda/janus">janus</a> for a quick bootstrap then tweaked the parts one by one everyday. Love it so much.</p>

<h2>Self</h2>

<p>Some achievements on personal development:</p>

<ul>
<li>Established the habit of going to gym 3 times a week</li>
<li>Established the habit of writing a journal every day</li>
<li>Challenging Audible audio book(“challenge” because of my English skill is still not enough to catch all the audio)</li>
<li>Shifting to principle centered person, made first draft of personal mission statement</li>
<li>Become an amateur Youtuber: published a <a href="https://www.youtube.com/channel/UCwwhvJhX8ZqMoTsrKlkvrug">gaming channel</a> now have 566 subscribers, 500k views, generated about $277 income, estimated watched time is 3 years 280 days in total.</li>
</ul>


<h2>The Number of 2015</h2>

<p>2015 = 1024 + 512 + 256 + 128 + 64 + 16 + 8 + 4 + 2 + 1. Such a beautiful number isn’t it!? Happy new year~!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Good Things about Turning Into 30]]></title>
    <link href="http://kinopyo.com/blog/good-things-about-turning-into-30/"/>
    <updated>2014-12-31T12:30:00+09:00</updated>
    <id>http://kinopyo.com/blog/good-things-about-turning-into-30</id>
    <content type="html"><![CDATA[<p><img src="http://cdn.kinopyo.com/images/sanshierli.jpg" alt="三十而立" /></p>

<p>This year August I turned into 30, I wasn’t happy at all. In fact I was quite desperate. I felt I accomplished nothing, far away from who I expected to be. Now 4 months later, I finally managed to see the bright side, accepted myself and got physical and mental positive changes in life.</p>

<h2>Gap Between Dreams and Realities</h2>

<p>Turning into 30 is quite a big thing in China. There is a saying “三十而立”, directly translated to “a man should be independent [steadfast] at the age of 30”, nowadays it’s interpreted as financially independent, emotionally mature, have a good family to take care of. I was born and raised in that culture and unavoidably affected by it. When I was in high school, I dreamed about the day when I’m 30 I’d be mature for sure like a real adult, disciplined and principled, knowing everything about life, handle any tough situations well, have a lovely wife, a happy family, maybe even with 2 children, a boy and a girl, and doing my best job to protect them. Sadly none of these happened.</p>

<p>Goals are dreams with deadlines. Even though I had been working hard these years, but I didn’t make it like a real goal with concrete steps to make it happen. That explains why I ended up like this.</p>

<p>I didn’t celebrate that day, I wanted to write a post but couldn’t finish it because of the dark energy. Part of me was still refusing to accept the fact that I’m 30, I felt not young anymore.</p>

<h2>Everything Has To Become Worse Before It&#8217;s Getting Better</h2>

<p>So what would you do if you’re not happy about the situation? You simply change it. One thing I know for sure that if I take the action it would definitely make a positive impact but I’ve never done it yet, is exercise.</p>

<p>Unlike early 20s when I could play intense games 12 hours straight overnight then still manage to finish a whole day lesson in college, nowadays even 1 hour Starcraft II game would make me feel exhausted. Sleeping 7-8 hours is supposed to be enough but I still have to drag myself out of bed each day. I know there must be so many rooms for improvement.</p>

<p>I’ve read it many times in different places that exercise regularly will generate more energy and boost your creativity. Understand it is one thing, but taking actions is another thing. This time I showed no mercy to myself. I went to the gym near my place, asked the staff to give me a tour and immediately signed the paper for the membership. They was suggesting there’s a program will be available soon that I could use a coupon to join with relatively cheaper price, only thing I have to do is wait for it, but I turned it down said I want to do it now, today, I commit to do it, don’t wanna give myself any other chance to make any excuses. <strong>I know taking the actions now is way more valuable than the extra percentage of the price for me.</strong></p>

<p>My goal is not getting big muscles to make myself looking better to attract any females, I want to regain control of my life, to know that I’m capable of improving myself, to have more energies to accomplish the essential things in the future. I have the clarity, I’m absolutely sure about the direction, everything else just naturally happened without any resistance. It was as simple as that.</p>

<p>I am planning to write another post about my routines about going to the gym and some extra benefits.</p>

<h2>Keep The Ball Rolling</h2>

<p>Another side effect of having physical exercise is <strong>paying more attention to health</strong>. I became more conscious about what and when to eat, not like before I ate whatever I wanted, whenever I wanted without limitation. Have vegetables regularly, try to have dinner at least 3 hours before sleep, push dishes away even   though there’s some left if I know it’s enough already, etc. I’m still have little knowledge in this area so I’m also gonna take a cooking lesson to learn more systemically.</p>

<p>Also found myself have more time to read books. <strong>Reading is such an effective way to learn great thoughts from great people, <em>asynchronously</em></strong>. It allows me to constantly revisit my past and recognize which part could have been done differently to have better result. One great thing for getting older is that  you could find so many references from your past when reading, to fully explore the idea in your context, in your real experience.</p>

<p>By reading “The 7 Habits of Highly Effective People” I realized I had been living with impulse not correct principles, and that was why I was so weak to temptations, made several bad decisions  and hurt the people around me. I followed the suggestions from the book and got my first draft of personal mission statement done. Whenever I have to make tough decisions it’s <em>the reference</em> for me to look up, who I want to be, who should I put first, what’s my responsibility. Decisions are never easy, but having correct principles guide me, it makes me look from the big picture, be more determined to my choice and commit to the result no matter it turns out good or bad at that time.</p>

<h2>Willing to Think About Life Plan</h2>

<p>I was never a fan of making long term plan. Even just think about it made me headache. “I just want to enjoy everyday and forget those complex things”, I said to myself.</p>

<p>But now I’m really willing to take the challenge. I know I actually like to plan things, like for a trip, for Christmas, even plans in games. What stopped me from planning my life, was the fear of the future. Family issues, relationship issues, unresolved conflicts, fear of the unknown… Made me feel stressed and overwhelming, so I ran away, used “just enjoy everyday” as the excuse.</p>

<p>Every family has a issue, so does relationship. You can’t run forever. I started to explore the options and possibilities, it wasn’t as hard as I expected. I could still breathe, it didn’t kill me. Be proactive, take the initiative also applies here. It has to be me to handle these things.</p>

<h2>At Last</h2>

<p>None of these changes require you to physically be the age of 30, but I surrendered to the fear of the future before and was unable to see things clearly, unwilling to deal with them, until now. For what it&#8217;s worth, I’m glad I overcame all the internal struggles, it’s never too late to make a meaningful life.</p>

<p>I&#8217;ll end with some of my favorite quotes:</p>

<blockquote><p>Life is a gift, go make it count. - Michael Hyatt</p>

<p>The only true security in life comes from knowing that every single day you are improving yourself in some way, that you are increasing the caliber of who you are and that you are valuable to your company, your friends, and your family. - Anthony Robbins</p></blockquote>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Run DelayedJob Manually in Test Env]]></title>
    <link href="http://kinopyo.com/blog/run-delayedjob-manually-in-test-env/"/>
    <updated>2014-12-13T14:18:00+09:00</updated>
    <id>http://kinopyo.com/blog/run-delayedjob-manually-in-test-env</id>
    <content type="html"><![CDATA[<h2>TL;DR</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># in config/initializers/delayed_job_config.rb</span>
</span><span class='line'><span class="ss">Delayed</span><span class="p">:</span><span class="ss">:Worker</span><span class="o">.</span><span class="n">delay_jobs</span> <span class="o">=</span> <span class="kp">true</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># in your spec</span>
</span><span class='line'><span class="ss">Delayed</span><span class="p">:</span><span class="ss">:Worker</span><span class="o">.</span><span class="n">new</span><span class="o">.</span><span class="n">work_off</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Common Setup of DelayedJob</h2>

<p>Assume you follow <a href="https://github.com/collectiveidea/delayed_job#gory-details">DelayedJob readme example</a> to configure it like this: <code>Delayed::Worker.delay_jobs = !Rails.env.test?</code>, what it does is in test env it doesn’t delay the job, meaning DelayedJob is being <em>transparent</em>, the job you put will be executed in “real time”. In most cases you don’t even need to worry about it, your test should be just fine, but recently it caught me…</p>

<h2>It Fails When…</h2>

<p>To give some background, I’m working on a API centric rails project. In order to authenticate with API we pass in access token for every request, and that’s done in the middleware layer. Since access token is stored in cookie, and in middleware we can’t access browser cookie directly, so another tool called <a href="https://github.com/steveklabnik/request_store">RequestStore</a> is used. If in the same request, what you stored in RequestStore you can access it later no matter the context, a unrealistic example would be you store a cookie value to RequestStore then use it in model later. Don’t do that :).</p>

<p>The code below is a simplified version to illustrate the flow.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">ApplicationController</span> <span class="o">&lt;</span> <span class="ss">ActionController</span><span class="p">:</span><span class="ss">:Base</span>
</span><span class='line'>  <span class="n">before_action</span> <span class="ss">:set_api_access_token</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">set_api_access_token</span>
</span><span class='line'>    <span class="no">RequestStore</span><span class="o">.</span><span class="n">store</span><span class="o">[</span><span class="ss">:access_token</span><span class="o">]</span> <span class="o">=</span> <span class="n">cookies</span><span class="o">.</span><span class="n">signed</span><span class="o">[</span><span class="ss">:access_token</span><span class="o">]</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">class</span> <span class="nc">Authentication</span> <span class="o">&lt;</span> <span class="ss">Faraday</span><span class="p">:</span><span class="ss">:Middleware</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">call</span><span class="p">(</span><span class="n">env</span><span class="p">)</span>
</span><span class='line'>    <span class="n">env</span><span class="o">[</span><span class="ss">:request_headers</span><span class="o">][</span><span class="s1">&#39;Authorization&#39;</span><span class="o">]</span> <span class="o">=</span> <span class="no">RequestStore</span><span class="o">[</span><span class="ss">:access_token</span><span class="o">]</span> <span class="k">if</span> <span class="no">RequestStore</span><span class="o">[</span><span class="ss">:access_token</span><span class="o">]</span>
</span><span class='line'>    <span class="vi">@app</span><span class="o">.</span><span class="n">call</span><span class="p">(</span><span class="n">env</span><span class="p">)</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>Every api request happened inside the rails <code>ApplicationController</code> stack should have the access token being set, but what would happen in a different context like rake task or DelayedJob where you need to send request to the API? The <code>before_action</code> is not gonna be executed there so <code>RequestStore[:access_token]</code> would be nil. This is an easy-to-spot issue <em>if</em> you try it once, but if you follow the TDD work flow and write test for it first, then it’ll fail you.</p>

<p>With <code>Delayed::Worker.delay_jobs</code> set to <code>false</code> in test env, the job will be executed immediately in the same request, so the <code>RequestStore[:access_token]</code> still contains the value and will pass to the Authorization header in the middleware, spec passed but but in real world env it failed. Typical false positive result.</p>

<h2>To Run It Manually</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># in config/initializers/delayed_job_config.rb</span>
</span><span class='line'><span class="ss">Delayed</span><span class="p">:</span><span class="ss">:Worker</span><span class="o">.</span><span class="n">delay_jobs</span> <span class="o">=</span> <span class="kp">true</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># in your spec</span>
</span><span class='line'><span class="c1"># here is the code to enqueue a job to DelayedJob queue</span>
</span><span class='line'><span class="n">visit</span> <span class="n">post_path</span><span class="p">(</span><span class="n">post</span><span class="p">)</span>
</span><span class='line'><span class="c1"># run it manually</span>
</span><span class='line'><span class="ss">Delayed</span><span class="p">:</span><span class="ss">:Worker</span><span class="o">.</span><span class="n">new</span><span class="o">.</span><span class="n">work_off</span>
</span><span class='line'><span class="c1"># expectation</span>
</span><span class='line'><span class="n">expect</span><span class="p">(</span><span class="n">api_endpoint</span><span class="p">)</span><span class="o">.</span><span class="n">to</span> <span class="n">have_been_requested</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p><code>Delayed::Worker.new.work_off</code> returns an Array like <code>[1, 0]</code> indicating succeeded job counts and failed job counts. I’ve also seen some people testing against that like <code>expect(Delayed::Worker.new.work_off).to eq([1, 0])</code>, personally I don’t think it’s necessary.</p>

<ol>
<li>You have your own expectation right after that and that should be the main concern of the spec. If the job failed, your spec should be failed too.</li>
<li>What if multiple jobs are enqueued while you’re only focusing one of them in the spec? Update the value to <code>[2, 0]</code>? That’s just noise.</li>
</ol>


<p>I guess what I encountered is a rare case, but definitely an interesting case. I kinda prefer this way to mimic real world environment to prevent any possible regressions.</p>

<p>Commercial time: If you’re about to build a API centric rails app, be sure to check out the awesome gem called <a href="https://github.com/balvig/spyke">spyke</a> made by <a href="https://twitter.com/balvig">@balvig</a>, the slogan is “Interact with remote REST services in an ActiveRecord-like manner.”</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Book "Essentialism - The Disciplined Pursuit of Less"]]></title>
    <link href="http://kinopyo.com/blog/book-essentialism-the-disciplined-pursuit-of-less/"/>
    <updated>2014-11-18T20:53:00+09:00</updated>
    <id>http://kinopyo.com/blog/book-essentialism-the-disciplined-pursuit-of-less</id>
    <content type="html"><![CDATA[<p>&#8220;Have you ever found yourself stretched too thin? Have you ever felt both overworked and underutilized? Have you ever found yourself majoring in minor activities? Do you ever feel busy but not productive?&#8221;</p>

<p>This book is about answers to these questions. The <strong>key messages and takeaways for me are</strong>:</p>

<ul>
<li>Life is a tradeoff. You can’t have it all, therefore you have to choose, choose what matters the most. Less, but better.</li>
<li>You have to give yourself permission to say No to others, so you can say Yes to your goal and make highest contribution.</li>
<li>It’s not about getting more things done, it’s about getting the right things done. Effective over productive. I love this so much.</li>
</ul>


<h2>If You Don’t Have Time to Read it…</h2>

<p>Here is a great video reviewing this book, and actually I started reading it because of this video. To be honest I think it might be arguably <em>better</em> than the book itself. If you don’t have enough time, just check out the video, should take you less than 25 minutes.</p>

<div class="video-container">
<iframe width="560" height="315" src="http://kinopyo.com//www.youtube.com/embed/k-mciueg_K0" frameborder="0" allowfullscreen></iframe>
</div>


<h2>Chapters I Would Like to Read Twice</h2>

<p>Part I: Essence: What is the core mind-set of an Essentialist?</p>

<ul>
<li>CHOOSE: The Invincible Power of Choice</li>
<li>DISCERN: The Unimportance of Practically Everything</li>
<li>TRADE-OFF: Which Problems Do I want?</li>
</ul>


<p>Part II: Explore: How can we discern the trivial many from the vital few?</p>

<ul>
<li>SLEEP: Protect the Asset</li>
<li>SELECT: The Power of Extreme Criteria</li>
</ul>


<p>Part III: Eliminate: How can we cut out the trial many?</p>

<ul>
<li>DARE: The Power of a Graceful “No”</li>
</ul>


<p>Part IV: Execute: How can we make doing the vital few things almost effortless?</p>

<ul>
<li>PROGRESS: The Power of Small Wins</li>
</ul>


<h2>Overview</h2>

<p>The first part, the &#8220;What&#8221; part, is really great. All the problems introduced there are so real, I could map literary everything to my real life. Very inspirational.</p>

<p>But sadly the following chapters, the &#8220;how&#8221; part, are less compelling to me. I agree with the general idea, it’s just the examples and evidences are not convincing enough.</p>

<p>Overall it’s a good book, I’d rate it 4 out of 5. It does give me positive energies and courages to improve my life, makes me pause to think about the past, which choices were made by “default”(others) and which were made by “design”(me), makes me think twice before purchase any non-essential items, makes me observe my bad habits &amp; routines and fix them, makes me pursue less but better.</p>

<p>p.s. I didn&#8217;t title this post as &#8220;Book Review&#8221;, as I realized the word &#8220;review&#8221; is too big for me, makes me want to cover every aspect of the book, pros and corns, scan every note and highlight I made during the reading, that is overwhelming and will simplify stops me from writing. “Done is better than perfect”, indeed, the essential thing for me is to write this post and share my findings!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Use ActiveJob in Rails 4.1]]></title>
    <link href="http://kinopyo.com/blog/use-activejob-in-rails-4-1/"/>
    <updated>2014-10-22T18:16:00+09:00</updated>
    <id>http://kinopyo.com/blog/use-activejob-in-rails-4-1</id>
    <content type="html"><![CDATA[<p>ActiveJob is <a href="http://weblog.rubyonrails.org/2014/8/20/Rails-4-2-beta1/">the headline feature in Rails 4.2</a>, the <a href="http://edgeguides.rubyonrails.org/active_job_basics.html">Active Job Basics on RailsGuides</a> explains the philosophy and usage very well, make sure you’ve checked that first. However there’re some gotchas if you want to use it right now in your Rails 4.1 app. Here I’m gonna show you how to install it in 4.1, and things you need to take extra care of.</p>

<h2>Install ActiveJob in Rails 4.1</h2>

<p>Add <code>activejob</code> to your <code>Gemfile</code> then <code>bundle install</code>.</p>

<p>Create a <code>active_job.rb</code> file under <code>config/initializers</code> and paste code below.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="nb">require</span> <span class="s1">&#39;active_job&#39;</span>
</span><span class='line'><span class="c1"># or any other supported backend such as :sidekiq or :delayed_job</span>
</span><span class='line'><span class="ss">ActiveJob</span><span class="p">:</span><span class="ss">:Base</span><span class="o">.</span><span class="n">queue_adapter</span> <span class="o">=</span> <span class="ss">:inline</span>
</span></code></pre></td></tr></table></div></figure>


<p>Now you should be abel to load ActiveJob in your rails app without error.</p>

<p>Note that the one you installed is not <a href="https://github.com/rails/rails/tree/master/activejob">the one inside the rails repository</a>, that has a version of <a href="https://rubygems.org/gems/activejob/versions/4.2.0.beta2">4.2.0.beta2</a> same as Rails at the time of writing, the one you installed is <a href="https://rubygems.org/gems/activejob/versions/0">version 0</a>. You can find the archived source code from its <a href="https://github.com/rails/activejob">original repository</a>.</p>

<h2>Creating a Job</h2>

<p>To create a job, you have to manually create the <code>app/jobs</code> folder first, then follow the same naming convention to create your job class file like <code>app/jobs/guests_cleanup_job.rb</code>.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">GuestsCleanupJob</span> <span class="o">&lt;</span> <span class="ss">ActiveJob</span><span class="p">:</span><span class="ss">:Base</span>
</span><span class='line'><span class="err">  </span><span class="n">queue_as</span> <span class="ss">:default</span>
</span><span class='line'>
</span><span class='line'><span class="err">  </span><span class="k">def</span> <span class="nf">perform</span><span class="p">(</span><span class="o">*</span><span class="n">args</span><span class="p">)</span>
</span><span class='line'><span class="err">    </span><span class="c1"># Do something later</span>
</span><span class='line'><span class="err">  </span><span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Enqueuing the Job</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="no">GuestsCleanupJob</span><span class="o">.</span><span class="n">enqueue</span><span class="p">(</span><span class="n">record</span><span class="p">)</span>
</span><span class='line'><span class="no">GuestsCleanupJob</span><span class="o">.</span><span class="n">enqueue</span><span class="p">(</span><span class="n">record</span><span class="p">,</span> <span class="n">options</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Differences between latest ActiveJob</h2>

<ul>
<li>no rails generator for jobs.</li>
<li>no callback mechanism like <code>before_enqueue</code>, <code>before_perform</code> etc.</li>
<li>doesn’t load itself to rails app by default, that’s why you need a initializer to load it manually.</li>
<li>enqueue syntax is slightly different, in Rails 4.2.beta2 <code>enqueue</code> has changed to <code>perform_later</code>.</li>
<li>internally it’s using <a href="https://github.com/rails/activemodel-globalid">activemodel-globalid</a> instead of <a href="https://github.com/rails/globalid">GlobalID</a>(GlobalID is renamed from activemodel-globalid).</li>
<li>setting backend syntax is slightly different</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># Rails 4.2.beta2</span>
</span><span class='line'><span class="no">Rails</span><span class="o">.</span><span class="n">application</span><span class="o">.</span><span class="n">config</span><span class="o">.</span><span class="n">active_job</span><span class="o">.</span><span class="n">queue_adapter</span> <span class="o">=</span> <span class="ss">:delayed_job</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># Rails 4.1</span>
</span><span class='line'><span class="ss">ActiveJob</span><span class="p">:</span><span class="ss">:Base</span><span class="o">.</span><span class="n">queue_adapter</span> <span class="o">=</span> <span class="ss">:delayed_job</span>
</span></code></pre></td></tr></table></div></figure>


<p>p.s. I haven’t checked ActionMailer. I’m currently using it with DelayedJob and so far so good.</p>

<h2>Summary</h2>

<p>ActiveJob is very convenient, it provides a unified interface for the job infrastructure that allows you to switch the backend easily.</p>

<p>But as you can see there’re <strong>big diffs between the latest  developed version and the one now we’re able to install in Rails 4.1.</strong></p>

<p>Is it worth it to make the effort to try it now, and push these small upcoming changes when you upgrade to Rails 4.2 to your mental stack? My suggestion is <strong>if you’re just right about to implement a queue system and willing to adapt to it, then it’s OK</strong>, otherwise maybe better just leave the current app running as is and wait for a more mature timing.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[RubyKaigi 2014 - 3 Good Talks for Rails Developers]]></title>
    <link href="http://kinopyo.com/blog/rubykaigi-2014-3-good-talks-for-rails-developers/"/>
    <updated>2014-09-23T18:21:00+09:00</updated>
    <id>http://kinopyo.com/blog/rubykaigi-2014-3-good-talks-for-rails-developers</id>
    <content type="html"><![CDATA[<p>I went to <a href="http://rubykaigi.org/2014">Rubykaigi 2014</a> last week, there were lots of great talks about ruby itself, rails tips and more. Here I’ll share 3 things I feel worth to share for rails developers.</p>

<h2>Synvert</h2>

<p><a href="http://rubykaigi.org/2014/presentation/S-RichardHuang">Speaker page on Rubykaigi2014</a></p>

<blockquote><p>Synvert = syntax + convert, makes it easy to convert ruby code automatically</p></blockquote>

<p>Synvert is a gem made by the same author of <a href="https://github.com/flyerhzm/bullet">bullet</a> gem. Using it you can convert your rails 3 <code>before_filter</code> to rails 4 syntax <code>before_action</code>, rspec <code>should have</code> to <code>expect(…).to have</code> or ruby 1.8 hash to 1.9 hash syntax with just one command, and it does support more. It’s well tested so no worry for human error.</p>

<p>You could define your own rules to convert code, or use those built-in very common used snippets for rails, rspec and factory_girl.</p>

<h3>Installation and usage</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">gem</span> <span class="n">install</span> <span class="n">synvert</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># fetch snippets to ~/.synvert directory</span>
</span><span class='line'><span class="n">synvert</span> <span class="o">--</span><span class="n">sync</span>
</span><span class='line'>
</span><span class='line'><span class="n">synvert</span> <span class="o">-</span><span class="n">r</span> <span class="n">factory_girl</span><span class="o">/</span><span class="n">use_short_syntax</span>
</span></code></pre></td></tr></table></div></figure>


<p>Run <code>git diff</code> I got</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='diff'><span class='line'><span class="gd">- user = FactoryGirl.create(:user)</span>
</span><span class='line'><span class="gi">+ user = create(:user)</span>
</span></code></pre></td></tr></table></div></figure>


<h3>How does it work</h3>

<p>AST(Abstract Syntax Tree) is used internally, it parses your source code to meaningful structures. It’s like grammar in English, one phrase can be broken down to words and some are noun, some are verb, it’s like saying “let’s replace all the verb ‘walk’ to ‘run’”.  I highly recommend you to check out the slide if you want to learn more.</p>

<p><img src="http://cdn.kinopyo.com/images/attributes_for_ast_node.png" alt="Example of attributes for AST node" /></p>

<p>For instance, it breaks a method call to receiver, message and arguments. A typical method call is a type of “send node”, class definition is “class node” and there is “block node”.</p>

<p>Links</p>

<ul>
<li><a href="https://speakerdeck.com/flyerhzm/write-ruby-code-to-change-ruby-code">Write ruby code to change ruby code </a></li>
<li><a href="https://github.com/xinminlabs/synvert">synvert gem</a></li>
<li><a href="http://synvert-tools.herokuapp.com">synvert playground</a></li>
</ul>


<h2>Going the distance</h2>

<p><a href="http://rubykaigi.org/2014/presentation/S-RichardSchneeman">Speaker page on Rubykaigi2014</a></p>

<p>To be honest I’m not sure I fully understand the algorithm of calculating distance between 2 words, but the great part is <a href="https://twitter.com/schneems">@ schneems</a> used it to improve rails generator command to suggest possible commands when you had a typo.</p>

<p>Please see the pull request for details. <a href="https://github.com/rails/rails/pull/15497">Emit suggested generator names when not found #15497</a></p>

<p>If you ever make a cli command, you could follow the same pattern, using the algorithm to suggest candidates instead of just showing plain error message.</p>

<p>Good to see how how he adapted scientific algorithm to solve real world problem.</p>

<h2>Speeding up Rails 4.2</h2>

<p><a href="http://rubykaigi.org/2014/presentation/S-AaronPatterson">Speaker page on Rubykaigi2014</a></p>

<p>Interesting to see how <a href="https://twitter.com/tenderlove">@tenderlove</a> find room for optimization and how to measure it.</p>

<p>Tools mentioned:</p>

<ul>
<li><a href="https://github.com/evanphx/benchmark-ips">benchmark-ips</a>, benchmarks a blocks iterations/second. For short snippits of code, ips automatically figures out how many times to run the code to get interesting data. No more guessing at random iteration counts!</li>
<li><a href="https://github.com/ko1/allocation_tracer">allocation_tracer</a>, allows to trace object allocation.</li>
</ul>


<p><a href="https://speakerdeck.com/tenderlove/gao-du-nakodo">Slide on speakerdeck</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Recover Your Local Octopress Repository]]></title>
    <link href="http://kinopyo.com/blog/recover-your-local-octopress-repository/"/>
    <updated>2014-03-01T01:52:00+09:00</updated>
    <id>http://kinopyo.com/blog/recover-your-local-octopress-repository</id>
    <content type="html"><![CDATA[<p>Here I&#8217;ll show you how to recover or restore your local octopress
repository, for instance you&#8217;re on a new machine, or just lost your
local copy of it.</p>

<p>It requries you to have a repository on github that you&#8217;ve deployed your
octopress posts.</p>

<p>First I recommend that you read this post: <a href="http://blog.zerosharp.com/clone-your-octopress-to-blog-from-two-places/">Clone Your Octopress to Blog From Two Places</a>, the <strong>Recreating a local Octopress repository</strong> section.</p>

<p>And here is what worked for me, please replace <code>kinopyo</code> with your user
name.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>git clone -b source git@github.com:kinopyo/kinopyo.github.com.git octopress
</span><span class='line'>cd octopress
</span><span class='line'>
</span><span class='line'>gem install bundler
</span><span class='line'>bundle install
</span><span class='line'>
</span><span class='line'>rake preview
</span><span class='line'>open http://localhost:4000</span></code></pre></td></tr></table></div></figure>


<h2>Tips on Converting HTML to Markdown</h2>

<p>Somehow the latest 3 posts are still missing after I git cloned my
remote repository. I checked in advance and saved those copies as html.
And after I restored my octopress repository I used <a href="http://johnmacfarlane.net/pandoc/">Pandoc</a> to convert those html to markdown.</p>

<p>It works like:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>pandoc -f html -t markdown your_html_file.html</span></code></pre></td></tr></table></div></figure>


<h2>Thoughts on Disaster</h2>

<p>p.s. I stored my blog octopress repository on Dropbox and somehow it
just all gone, it really shocked me. Probably it was my fault not
theirs, but still I always thought Dropbox is a safe place, but I don&#8217;t
even have a clue why it happended and somehow could&#8217;t see the history and
restore from their website. After I noticed it everytime I came up with
something to write I&#8217;ve had used it as an excuse, or maybe I was not in
the mood to deal with it(also I didn&#8217;t know how&#8230;).</p>

<p>So I need a fallback solution about Dropbox, every disaster changes you to rethink
about current seems comfortable situation. And hope I&#8217;ll write more often :)</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Remote Work, Day One: Trust]]></title>
    <link href="http://kinopyo.com/blog/remote-work-day-one-trust/"/>
    <updated>2013-11-11T00:00:00+09:00</updated>
    <id>http://kinopyo.com/blog/remote-work-day-one-trust</id>
    <content type="html"><![CDATA[<p><img src="http://cdn.kinopyo.com/images/Trust-is-everything-front-cover.jpg" alt="" /></p>

<p>Lots of big changes happened in my life recently, one of them is my
workplace. Lucky enough, now I got a chance to embrace the <em>modern</em>
style of work, that is working remotely.</p>

<p>I suppose you know more or less about remote. 37signals has published
their new book, <a href="http://37signals.com/remote/">REMOTE: Office Not
Required</a>, where all the benefits you can
get from remote is described. I’m half way done of that book, and
probably will write another post once I finished it and compared it to
my real experience. So here I’m gonna talk about only one thing, a key
thing, <strong>trust</strong>.</p>

<p>I’m a true believer of remote work. As in the book says,</p>

<blockquote><p>The bottom line is that you shouldn’t hire people you don’t trust, or
work for bosses who don’t trust you. If you’re not trusted to work
remotely, why are you trusted to do anything at all?</p></blockquote>

<p>I totally agree with that. But in reality is, well at least the
environment around me is even every single manager or boss is good and
kind, we still fall into the traditional working style, 9:00 - 18:00+ in
the office, that’s the norm, so dominant, I didn’t even try to convince
anyone to change that.</p>

<p>Fortunately I got a very unique opportunity to do remote work. After the
first day, I should say the biggest and most important “get” is not
about the productivity, freedom or flexibility, although they’re truly
there, <strong>it’s about the trust I’ve never experienced at work.</strong></p>

<p>“I trust you. So no matter what, when and where you do the work, I don’t
care, as long as we’re moving forward.” That was pretty much the key
conversation I had. It was a really warm feeling. I don’t know how to
explain it in words exactly, to be honest I did see that remote work
coming before I joined. But when it really happened, I was flattered!
I’ve never got this kind of tremendous trust, it means a lot to me as a
person. I’m sure I’m not gonna waste it.</p>

<p><strong>Trust is the first step to remote work. It’s personal and
fundamental.</strong> If you trust your teammate, with proper tools and
communications I really think remote work will work!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Install capybara-webkit on Mavericks]]></title>
    <link href="http://kinopyo.com/blog/install-capybara-webkit-on-mavericks/"/>
    <updated>2013-10-29T12:00:00+09:00</updated>
    <id>http://kinopyo.com/blog/install-capybara-webkit-on-mavericks</id>
    <content type="html"><![CDATA[<p>I got a brand new Mac Air recently, when I tried to install
capybara-webkit I encountered some problems.</p>

<h2>The Error</h2>

<p>Got this error when bundle install one rails app.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>Installing capybara-webkit (0.12.1)
</span><span class='line'>Gem::Installer::ExtensionBuildError: ERROR: Failed to build gem native extension.
</span><span class='line'>
</span><span class='line'>    /Users/qihuan-piao/.rvm/rubies/ruby-2.0.0-p247/bin/ruby extconf.rb
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>Gem files will remain installed in /Users/qihuan-piao/.rvm/gems/ruby-2.0.0-p247/gems/capybara-webkit-0.12.1 for inspection.
</span><span class='line'>Results logged to /Users/qihuan-piao/.rvm/gems/ruby-2.0.0-p247/gems/capybara-webkit-0.12.1/./gem_make.out
</span><span class='line'>
</span><span class='line'>An error occurred while installing capybara-webkit (0.12.1), and Bundler cannot continue.
</span><span class='line'>Make sure that `gem install capybara-webkit -v '0.12.1'` succeeds before bundling.
</span></code></pre></td></tr></table></div></figure>


<p>Tried <code>brew install qt</code> didn’t get luck, raised this error:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>brew install qt4 --build-from-source
</span><span class='line'>==&gt; Downloading http://download.qt-project.org/official_releases/qt/4.8/4.8.5/qt-everywhere-opensource-src-4.8.5.tar.gz
</span><span class='line'>Already downloaded: /Library/Caches/Homebrew/qt-4.8.5.tar.gz
</span><span class='line'>==&gt; ./configure -prefix /usr/local/Cellar/qt/4.8.5 -system-zlib -confirm-license -opensource -nomake demos -nomake examples -cocoa -fast -release -no-3dnow -L/opt/X11/lib -I/opt/X11/include -pl
</span><span class='line'>==&gt; make
</span><span class='line'>                                   ^
</span><span class='line'>7 errors generated.
</span><span class='line'>make[2]: *** [.obj/release-shared/qdrawhelper_ssse3.o] Error 1
</span><span class='line'>make[1]: *** [release] Error 2
</span><span class='line'>make: *** [sub-gui-make_default-ordered] Error 2
</span><span class='line'>
</span><span class='line'>READ THIS: https://github.com/mxcl/homebrew/wiki/troubleshooting
</span><span class='line'>
</span><span class='line'>These open issues may also help:
</span><span class='line'>    https://github.com/mxcl/homebrew/pull/22283
</span><span class='line'>    https://github.com/mxcl/homebrew/issues/23480</span></code></pre></td></tr></table></div></figure>


<h2>Solution</h2>

<p>Checked all those links and tried several things, eventually downloading
qt installer from the qt-project website solved my problem.</p>

<p><a href="http://qt-project.org/downloads"><img src="http://cdn.kinopyo.com/images/download_qt4.8_for_mac-3.png" alt="" /></a>
<a href="http://qt-project.org/downloads">Download link</a></p>

<p>Just install the debug libraries, qt libraries then bundle install
again.</p>

<h2>Note</h2>

<p>If you already got qt installed and capybara-webkit worked before
upgrade to Mavericks, then it’s probably gonna work as well.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Install Ruby 1.9.3 on Mavericks]]></title>
    <link href="http://kinopyo.com/blog/install-ruby-1-dot-9-3-on-mavericks/"/>
    <updated>2013-10-29T11:00:00+09:00</updated>
    <id>http://kinopyo.com/blog/install-ruby-1-dot-9-3-on-mavericks</id>
    <content type="html"><![CDATA[<h2>Problem</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ rvm install 1.9.3
</span><span class='line'>
</span><span class='line'>Searching for binary rubies, this might take some time.
</span><span class='line'>Found remote file https://rvm.io/binaries/osx/10.9/x86_64/ruby-1.9.3-p448.tar.bz2
</span><span class='line'>Checking requirements for osx.
</span><span class='line'>Installing requirements for osx.
</span><span class='line'>Updating system - using Zsh, can not show progress, be patient...
</span><span class='line'>Error running 'requirements_osx_brew_update_system ruby-1.9.3-p448',
</span><span class='line'>please read /Users/qihuan-piao/.rvm/log/1383014621_ruby-1.9.3-p448/update_system.log
</span><span class='line'>Requirements installation failed with status: 1.</span></code></pre></td></tr></table></div></figure>


<h2>Solution</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ gcc -v
</span><span class='line'>
</span><span class='line'>Configured with: --prefix=/Applications/Xcode.app/Contents/Developer/usr --with-gxx-include-dir=/usr/include/c++/4.2.1
</span><span class='line'>Apple LLVM version 5.0 (clang-500.2.79) (based on LLVM 3.3svn)
</span><span class='line'>Target: x86_64-apple-darwin13.0.0
</span><span class='line'>Thread model: posix
</span><span class='line'>
</span><span class='line'>rvm install 1.9.3 --with-gcc=clang</span></code></pre></td></tr></table></div></figure>


<h2>Reference</h2>

<p>http://stackoverflow.com/questions/8139138/how-can-i-install-ruby-1-9-3-in-mac-os-x-lion</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Use HTTP Caching in Heroku with Cloudflare]]></title>
    <link href="http://kinopyo.com/blog/use-http-caching-in-heroku-with-cloudflare/"/>
    <updated>2013-07-14T08:51:00+09:00</updated>
    <id>http://kinopyo.com/blog/use-http-caching-in-heroku-with-cloudflare</id>
    <content type="html"><![CDATA[<h1>TL;DR</h1>

<ul>
<li>Heroku doesn’t provide HTTP caching by default</li>
<li>Use CDN like <a href="http://www.cloudflare.com/">Cloudflare</a> or <a href="http://aws.amazon.com/cloudfront/">Amazon CloudFront</a>

<ul>
<li>Clouldflare has free plan, takes you less than 3 minutes to setup.</li>
</ul>
</li>
</ul>


<h1>HTTP Caching</h1>

<p>Just a quick example of HTTP caching.</p>

<p><img src="http://cdn.kinopyo.com/images/http_caching_example.jpg" alt="HTTP caching example" /></p>

<p>You can really feel the difference after you enabled it. Since most of your static assets, like js, css and image files, are gonna use browser cache without hitting your rails application, the user experience is improved a lot.</p>

<p>In my hobboy project <a href="http://quoty.me">quoty.me</a>, user had to download the black colored background image(22k) every time they visit a page, so there was a time lag to notice the background changed from white to black, which bothered me a lot. And that was why I noticed the HTTP caching is not enabled in Heroku.</p>

<h1>Heroku&#8217;s HTTP Caching</h1>

<blockquote><p>Heroku doesn’t provide HTTP caching by default. In order to take advantage of HTTP caching, you’ll need to configure your application to set the appropriate HTTP cache control headers and use a content delivery network (CDN) or other external caching service.</p></blockquote>

<p>I&#8217;m using cedar stack in Heroku, but I have to use &#8220;external&#8221;(oppose to add-ons or solutions provided by Heroku) stuff to make HTTP caching work.</p>

<p>I&#8217;ve also tried <a href="http://rtomayko.github.io/rack-cache/">Rack::Cache</a> with Memcache but somehow it didn&#8217;t work for me.</p>

<h1>Setup Cloudflare</h1>

<p>This time I decided to give Cloudflare a try. It&#8217;s free, easy to setup, and just work.</p>

<p>I&#8217;ll cut off how to setup Cloudflare, as the tutorial in its website is realy excellent. Just go to <a href="https://www.cloudflare.com/">https://www.cloudflare.com/</a> and follow the instructions, within 3-4 steps you&#8217;re done.</p>

<p>The other thing you have to do is to update your nameserver to the one provided by Cloundflare, like &#8220;IAN.NS.CLOUDFLARE.COM&#8221;. I&#8217;m using <a href="http://www.godaddy.com/">GoDaddy</a> for my quoty.me domain, the link to setup nameserver looks like this.</p>

<p><img src="http://cdn.kinopyo.com/images/godaddy_nameserver.jpg" alt="GoDaddy Nameserver setup link" /></p>

<h1>Further Reading</h1>

<ul>
<li><a href="https://devcenter.heroku.com/articles/http-caching">HTTP Caching | Heroku Dev Center</a>
<a href="https://devcenter.heroku.com/articles/increasing-application-%20-performance-with-http-cache-headers">Increasing Application Performance with HTTP Cache Headers | Heroku Dev Center</a></li>
<li><a href="https://devcenter.heroku.com/articles/http-caching-ruby-rails">HTTP Caching in Ruby with Rails | Heroku Dev Center</a></li>
<li><a href="http://railscasts.com/episodes/321-http-caching">#321 HTTP Caching (pro) - RailsCasts</a></li>
<li><a href="http://www.bestechvideos.com/2009/03/21/railslab-scaling-rails-episode-11--%20advanced-http-caching">RailsLab Scaling Rails: Episode #11 - Advanced HTTP Caching</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[夜型の僕が早起きを31日間頑張って思ったこと]]></title>
    <link href="http://kinopyo.com/blog/me-as-a-nightowl-become-a-morning-person-for-31-days/"/>
    <updated>2013-06-21T21:45:00+09:00</updated>
    <id>http://kinopyo.com/blog/me-as-a-nightowl-become-a-morning-person-for-31-days</id>
    <content type="html"><![CDATA[<p><img src="http://cdn.kinopyo.com/images/morning_person.JPG" alt="僕とチームメートのテーブルの間にポスト・イットを貼って早起きした日数を刻んでました。" /></p>

<h2>TL;DR</h2>

<ul>
<li>早起きしたいと自ら望むこと</li>
<li>やれば絶対誰でもできる（事実）</li>
<li>柔軟に軌道修正</li>
</ul>


<h2>はじめに</h2>

<p>5/22から早起きを頑張りました。
&#8220;何時に起きてるの？&#8221;
&#8220;8時です&#8221;
&#8220;えー全然早くね～じゃん&#8221;
と即行で鼻で笑われたりしました。</p>

<p>はい、ここ数年は大体夜2時前後に寝て朝9時半起きだった僕にとっては
もうこれが大きな一歩です。
何より、全然できないといつも思ってたからです。
また今はいろいろ試行錯誤で8時にしただけで、
しようと思えば6〜7時にもできる自信が付いたんです。</p>

<p>この一ヶ月で頑張ったこと、思ったことをの共有したいと思います。</p>

<h2>きっかけ</h2>

<p>段々年をとると、よほどインパクのでかい物事が起きないと
今までの生活習慣を変えるのは大変かなと思ってます。
その中でも早起きはずっとしたかったんです。
ちょうどチームの友達とこの話をしたら彼も同じことを考えるので
2人で頑張ろうという流れに何となくなりました。
できるかどうか、半信半疑の感じで始めたのですが、</p>

<ul>
<li>約束を破りたくない</li>
<li>そして何より負けたくない</li>
</ul>


<p>の2つの見えないチカラが背中をずっと押してくれました。
（前半は↑ですね、大体途中でもう早起きが習慣になってきました）</p>

<h2>早起きするために</h2>

<h3>まず&#8221;心の準備&#8221;</h3>

<h4>自発的に早起きしたい気持ち</h4>

<ul>
<li>周りの家族や友達、上司に言われてから</li>
<li>朝ミーティングがあるから</li>
</ul>


<p>のような感じですと絶対長続きできないです。
自発的に”そういう人になりたい”と思わないと。</p>

<h4>Be aware of yourself</h4>

<p>自分の一日の行動、気持ち、体調などに気を配ることです。
効率は上がったのか？いつが一番眠いのか？気持ちいいと感じるのか？
などなどどんどん自分に質問を投げて、軌道修正する。</p>

<h4>メリットを感じなければやめる</h4>

<p>実際早起きして得することはあったのか？
無駄に疲れて、ストレスが溜まるばかりにいいことは全然なかった。
特にメリットを感じなければやめて</p>

<h3>具体的な試み</h3>

<p>極めてシンプルです、簡単とは言えないですが。</p>

<ol>
<li>監督しあう仲間を探す</li>
<li>朝食の時間を楽しむ</li>
<li>睡眠時間は削らない</li>
<li>運動して無理やり早寝する</li>
</ol>


<h4>監督(supervise)しあう仲間を探す</h4>

<p>自分と同じくらいのレベルで同じ挑戦をしたい人を見つかればベストですが、
そうじゃなくても自分が一番信頼できる人に自分のプランをコミットするのも全然ありです。
こういう手法は今まで何度も聞きましたが、やってみて思ったのが
本当に一番効率のいい方法で、僕の性格にもぴったりの感じです。</p>

<h4>朝食を楽しむ</h4>

<p>早起きしたら朝食は絶対抜けないと自分で決めました。
たまには外で食べながら本を読んだり、単純にぼっとしたりして
自分なりで朝を楽しんでました。
余裕のある朝なんて贅沢すぎる！</p>

<p>また初めて最初の土日が一番ピーク（起きたくない）かもしれませんが、
あえて朝に予定を入れたり、起きたらとりあえず
一杯のコーヒーを飲んだりするなど自分なりで
乗り越える方法を事前に考えて起きたらいいです。</p>

<h4>睡眠時間は削らない</h4>

<p>早起きした分仕事も早めにスタートできるので、
夜は今までと比べて早めに退勤することができて、
帰って料理したり本読んだりすれば自然に11時くらいから
もう寝るモードに入ります。
逆に睡眠時間を削ると本末転倒なことになるので、
疲れたり眠くなったりするしかないですね。</p>

<h4>運動して無理やり早寝する</h4>

<p>最初の二三日は僕はいつもランニングして”無理やり”
早寝を促進してます。
体がちょうど良い感じに疲れてその流れで寝れば
自然に早起きのサイクルになります。</p>

<h4>その他のInspiration</h4>

<p><a href="http://michaelhyatt.com/053-how-to-become-a-morning-person-podcast.html">#053: How to Become a Morning Person [Podcast] | Michael Hyatt</a></p>

<blockquote><p>You said, “I’m a night person or a night owl by nature.” It’s my own personal belief that people aren’t morning people or evening people by nature.
I don’t think there is anything biologically or physiologically that you can point to that would suggest that is somehow predetermined. We may have a preference and we may have a set of practices that have been conditioned into a habit over a long period of time, but these are things I believe that with focus and intention can be changed.</p></blockquote>

<h2>最後に</h2>

<p>紹介した方法以外の目覚めし時計をどう設定するとか、
部屋の照明を暗くするとかは全部マイナーの問題にすぎないです。</p>

<p>新しいことを21日間続ければ習慣になるそうですが、
僕の場合大体10日でもう慣れた実感がしました。
ライフサイクルが改善されて、電車の中でも本が読める気力があって
オフで勉強したことが仕事にもいいフィードバックと刺激になったと思います。
この際隣の人と試してみてはどうですか？</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Notes on Let's Make Testing Fun Again]]></title>
    <link href="http://kinopyo.com/blog/notes-on-lets-make-testing-fun-again/"/>
    <updated>2013-06-01T15:18:00+09:00</updated>
    <id>http://kinopyo.com/blog/notes-on-lets-make-testing-fun-again</id>
    <content type="html"><![CDATA[<h2>The talk</h2>

<p><a href="http://lanyrd.com/2012/windycityrails/sxqbt/">Let&#8217;s Make Testing Fun Again at WindyCityRails 2012 | Lanyrd</a></p>

<script async class="speakerdeck-embed" data-id="5048ea4bb8fe2d0002020475" data-ratio="1.2994923857868" src="http://kinopyo.com//speakerdeck.com/assets/embed.js"></script>




<div class='video-container'>
<iframe src="http://player.vimeo.com/video/49525644" width="400" height="300" frameborder="0" webkitAllowFullScreen mozallowfullscreen allowFullScreen></iframe>
</div>


<h2>Communication</h2>

<blockquote><p>Tests give you about the code. This happens over time, where you find that tests have become hard to write, the tests are becoming complicated and bogged down.</p>

<p>Rather than use it as an opportunity to blame the test or to blame testing, <strong>you should use it as an opportunity to learn something about your code, that there is a dependency that could potentially be simplified, or something you could be doing better.</strong></p></blockquote>

<h2>Keep relevant setup close</h2>

<blockquote><p>This is something that &#8220;relative good&#8221;(in terms of &#8220;absolute good&#8221;). It&#8217;s generally good to keep the setup of your tests close to the tests where it is.</p>

<p>What you want to avoid is the case where some sort of <code>before</code> setup way at the top of the file and you have stuff, and more stuff, and more stuff, and eventually in the end, what&#8217;s the <code>@user.name</code>? I don&#8217;t remember.</p></blockquote>

<h3>An Example</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">describe</span> <span class="no">User</span> <span class="k">do</span>
</span><span class='line'>  <span class="n">before</span> <span class="k">do</span>
</span><span class='line'>    <span class="vi">@user</span> <span class="o">=</span> <span class="no">Factory</span><span class="o">.</span><span class="n">build</span><span class="p">(</span><span class="ss">:user</span><span class="p">)</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1"># and more stuff</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1"># and more stuff</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">it</span> <span class="s2">&quot;uses the user&quot;</span> <span class="k">do</span>
</span><span class='line'>    <span class="vi">@user</span><span class="o">.</span><span class="n">name</span><span class="o">.</span><span class="n">should</span> <span class="o">==</span> <span class="c1"># i don&#39;t remember</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>This is where you see sometimes people say &#8220;You should never have setup outside your original test&#8221;.</p>

<h3>What to do about duplications and complicate shared setups</h3>

<blockquote><p>I think a lot of times if you need a complicated setup to test code, that often means your code is too complicated you need to start working out to move your dependencies. <strong>I tend to have a higher tolerance for duplication in my tests</strong> than I do in my regular code, specifically because <strong>I&#8217;m more interested in having the communication close</strong>, and less interested in maybe being clever about extracting setups in my tests. Sometimes I do if there&#8217;s a piece of stuff that&#8217;s really tightly coupled, and I can give it a descriptive enough name that I still feel like I have the benefit of keeping the setup close in the actual test.</p></blockquote>

<h2>Test Simple Values</h2>

<p>By using literal in check, when the spec fails, the error message is much easier to understand.</p>

<h2>Spy, don&#8217;t mock</h2>

<p>A <a href="http://pivotal.github.io/jasmine/">jasmine</a>
 test example.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="kd">var</span> <span class="nx">cheeseburger</span> <span class="o">=</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">cheeses</span><span class="o">:</span> <span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>    <span class="c1">// Ajax call to cheese server</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">};</span>
</span><span class='line'>
</span><span class='line'><span class="nx">it</span><span class="p">(</span><span class="s1">&#39;spies on the cheese server&#39;</span><span class="p">,</span> <span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">spyOn</span><span class="p">(</span><span class="nx">cheeseburger</span><span class="p">,</span> <span class="s1">&#39;cheeses&#39;</span><span class="p">);</span>
</span><span class='line'>  <span class="nx">cheeseburger</span><span class="p">.</span><span class="nx">cheeses</span><span class="p">();</span>
</span><span class='line'>  <span class="nx">expect</span><span class="p">(</span><span class="nx">cheeseburger</span><span class="p">.</span><span class="nx">cheeses</span><span class="p">).</span><span class="nx">toHaveBeenCalled</span><span class="p">();</span>
</span><span class='line'><span class="p">});</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>Readability advantage</li>
<li>Easy to find where actually fails</li>
</ul>


<p>BTW, if in spec, we need write like this:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">it</span> <span class="s1">&#39;spies on the cheese server&#39;</span> <span class="k">do</span>
</span><span class='line'>  <span class="c1"># in the reversed order</span>
</span><span class='line'>  <span class="n">cheeseburger</span><span class="o">.</span><span class="n">should_receive</span><span class="p">(</span><span class="ss">:cheeses</span><span class="p">)</span>
</span><span class='line'>  <span class="n">cheeseburger</span><span class="o">.</span><span class="n">cheeses</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<h3>More about Spy on Ruby and Rails</h3>

<p><a href="https://github.com/thoughtbot/bourne">thoughtbot/bourne</a> gem can let you have the rspec-like test spies syntax.</p>

<p><a href="http://robots.thoughtbot.com/post/159805295/spy-vs-spy">Spy vs spy</a>, good explanation on what is test spy the benefit of it.</p>

<h2>What Do We Love?</h2>

<p>These are quite frank and interesting questions.</p>

<ol>
<li>Do we still love writing tests?</li>
<li>Or do we just love having written tests?</li>
<li>Or do we just love saying that we&#8217;ve written tests?</li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Notes on Fast Test, Slow Test]]></title>
    <link href="http://kinopyo.com/blog/notes-on-fast-test-slow-test/"/>
    <updated>2013-05-30T21:56:00+09:00</updated>
    <id>http://kinopyo.com/blog/notes-on-fast-test-slow-test</id>
    <content type="html"><![CDATA[<p>Recently I got lots of inspirations and thoughts on how to write good tests. Thanks to Cookpad, the company I’m working on, I get the chance to work on a very large scale rails app. But it also introduces me to some very bad tests. Sometimes I found myself so difficult to add any spec, as it needs lots of extra efforts to make the fixture data, also one model got too many dependencies and collaborators, etc. I know it’s wrong, the code smells, just don’t know where to start.</p>

<p>So when I watched this video “Fast Test, Slow Test” by <a href="https://twitter.com/garybernhardt">@garybernhardt</a>, who also runs <a href="https://www.destroyallsoftware.com/screencasts">DestroyAllSoftware screencast</a>, I found it very helpful and wanted to take some notes on it.</p>

<div class="video-container">
<iframe width="640" height="480" src="http://www.youtube.com/embed/RAxiiRPHS9k?rel=0" frameborder="0" allowfullscreen></iframe>
</div>


<h1>Three Goals in Testing</h1>

<ul>
<li>Prevent Regression</li>
<li>Prevent Fear</li>
<li>Prevent Bad Design</li>
</ul>


<h1>How to Fail in Testing</h1>

<ul>
<li>Selenium as primary testing</li>
<li>“Units Test” are too large</li>
<li>Fine-grained tests around legacy code</li>
</ul>


<blockquote><p>What you’re saying here is that we acknowledge that this code sucks, so we’re going to go in and write tight tests around it that solidifies interface and just bake the badness forever. <strong>This is the worst way to do unit testing, go in your legacy system and write test around bad code.</strong></p></blockquote>

<h1>Too many dependencies in test</h1>

<blockquote><p>You end up with a test suite where it tends to either completely succeed or completely fail. It doesn’t give you any fine-grained feedback about what has actually gone wrong it just tells you you broke something. And you are left to dig these stack traces. <strong>In the ideal test suite you don’t have to dig through stack traces because ideally once test fails it will tell you exactly was broken (of course you never achieve that)</strong></p></blockquote>

<h1>More than 8 lines for a model test</h1>

<blockquote><p>I would ask myself why do I need to setup so much of the world to test this one small piece of behavior. That causes me to decompose it which causes better system design.</p></blockquote>

<h1>10% System/Acceptance Test, 90% Unit Test</h1>

<p>(in terms of test cases, not lines of code)</p>

<blockquote><p>That applies to mostly object heavy system like web app, that have a lot of logic and not a lot of boundaries.</p></blockquote>

<h1>Advice on models that very tied to database</h1>

<h2>Question</h2>

<blockquote><p>If you&#8217;re working with model objects that they&#8217;re very tied to the database specifically things like you have to save that one object before you can associate with the other object and that means hitting the database. What&#8217;s your advice in terms of writing fast unit test?</p></blockquote>

<h2>Answer</h2>

<blockquote><p>Take all of that behavior that&#8217;s on your model objects and pull out of their into service classes that are stateless, that interact with the model objects. So view calls a service, service contains the intelligence and the service manipulates the model objects.</p>

<p>You can still have methods on your model objects do things like wrap specific queries in class methods, or wrap specific mutations when multiple fields are commonly manipulated together.</p>

<p>It&#8217;s okay to have those on your model object and then have the service use those but if you pull the behavior of the system out into the service, and you control the boundary between the service in the model by those methods you&#8217;ve written on the model, then you can mock out more easily and safely.</p></blockquote>
]]></content>
  </entry>
  
</feed>

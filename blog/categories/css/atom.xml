<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: CSS | Kinopyo Blog]]></title>
  <link href="http://kinopyo.com/blog/categories/css/atom.xml" rel="self"/>
  <link href="http://kinopyo.com/"/>
  <updated>2015-04-15T20:49:53+09:00</updated>
  <id>http://kinopyo.com/</id>
  <author>
    <name><![CDATA[Qihuan Piao]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Reading Materials For OOCSS, BEM And SMACSS]]></title>
    <link href="http://kinopyo.com/blog/reading-materials-for-oocss/"/>
    <updated>2015-04-15T20:16:00+09:00</updated>
    <id>http://kinopyo.com/blog/reading-materials-for-oocss</id>
    <content type="html"><![CDATA[<p>After all these years of web development I still haven't found a compelling way to organize and name css, once we all seemed to agree with the semantic naming methodology but as the project grows the magic aura disappears.</p>

<p>Recently my team has started the transition to apply OOCSS, SMACSS and BEM techniques to current project. I tried it a while and really think this is the best way so far to cleanly organize your css(code and files), make it scalable and reusable, with simple intuitive naming methomelodgy.</p>

<h2>Recommendations</h2>

<p>Here are the reading materials I found pretty easy to follow:</p>

<p><a href="https://mattstauffer.co/blog/organizing-css-oocss-smacss-and-bem">Organizing CSS: OOCSS, SMACSS, and BEM - MattStauffer.co</a></p>

<p>High level introduction to each terms, with simple example. Read it and you'll get the big picture.</p>

<br>


<p><a href="http://csswizardry.com/2013/01/mindbemding-getting-your-head-round-bem-syntax/">MindBEMding – getting your head ’round BEM syntax – CSS Wizardry – CSS, OOCSS, front-end architecture, performance and more, by Harry Roberts</a></p>

<p>Have an excellent guide on when to use BEM and not.</p>

<br>


<p><a href="http://blog.planetargon.com/entries/2014/1/7/the-pros-and-cons-of-modular-sass">The Pros and Cons of Modular Sass — Planet Argon Blog</a></p>

<p>Great article on the idea behind modular css in general. And the argument over semantic class names convinced me.</p>

<blockquote><p>Semantic markup is important in communicating the meaning of a webpage and is only becoming increasingly important; however, class names are for the developer. The exception to this relates to the use of microformats, in which case it is necessary to use specific semantic class names. It’s always important to consider names and what they communicate to you, your team, and future developers, but there is no dogmatic reason to avoid classes like “grid-1” or “pull-left” just because they describe presentation. People have conflated the use of semantic HTML (which relates to optimizing content for assistive technologies, browsers, the multitude of devices, and software that recontextualizes and reframes your content) with avoiding presentational class names for years, and I’m not quite sure why.</p></blockquote>

<p><a href="http://mikefowler.me/2013/10/17/support-for-bem-modules-sass-3.3/">Support for BEM modules in Sass 3.3 | Mike Fowler</a></p>

<p>How to write BEM in Sass.</p>

<br>


<p><a href="http://fullstackradio.com/episodes/1/">Full Stack Radio - 1: Matt Stauffer - CSS Semantics</a></p>

<p>A podcast. You'll get more out of it if you already some idea and experience about these terms, as in the podcast there're deep discussions on the very details of daily development.</p>

<br>


<p>That's it. Hope this could help you find your starting point.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[開発者ブログに便利なキーワードや言語シンタックスなどを強調するCSS]]></title>
    <link href="http://kinopyo.com/blog/wonderful-syntax-keyword-highlight-css-for-developer-blo"/>
    <updated>2011-10-18T00:00:00+09:00</updated>
    <id>http://kinopyo.com/blog/wonderful-syntax-keyword-highlight-css-for-developer-blo</id>
    <content type="html"><![CDATA[<p>開発者のブログではよく各言語に関する変数名やメソッド名などのようなキーワードを強調して表示する必要がありますね。「AV女優.com 開発者ブログ」を見るとき「これだっ！」と思ったCSSをから借りました、@sunomaruさんに感謝です！</p>

<h2>CSS</h2>

<p><div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;p>em {&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;pre>&lt;code>font-weight: normal;
</span><span class='line'>font-style: normal;
</span><span class='line'>white-space: nowrap;
</span><span class='line'>border: 1px solid #ccc;
</span><span class='line'>padding: 0.1em 0.6em;
</span><span class='line'>background: #f9f9f9;
</span><span class='line'>
</span><span class='line'>border-radius: 3px;
</span><span class='line'>-webkit-border-radius: 3px;
</span><span class='line'>-moz-border-radius: 3px;
</span><span class='line'>&lt;/code>&lt;/pre>
</span><span class='line'>
</span><span class='line'>&lt;p>}&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;p></span></code></pre></td></tr></table></div></figure></notextile></div></p>

<h2>DEMO</h2>

<p><em>emタグ</em>で囲めばいいですよ〜どうでしょう〜！</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[iPhone safari(webkit-base browser)のcheckboxのサイズを調整]]></title>
    <link href="http://kinopyo.com/blog/change-checkbox-size-in-iphone-safari"/>
    <updated>2011-09-30T00:00:00+09:00</updated>
    <id>http://kinopyo.com/blog/change-checkbox-size-in-iphone-safari</id>
    <content type="html"><![CDATA[<p>Webkit-baseのブラウザ(Safari, Google Chrome)に適用します。</p>

<p>普通のcheckboxはiphoneのようなスマートフォンで見るときとても小さいです。checkboxはcssでheightやwidthを指定しても効かないため、ちょっとしたトリックが必要です。</p>

<p><div><script src='https://gist.github.com/1252946.js'></script>
<noscript><pre><code>&lt;html&gt;&lt;body&gt;You are being &lt;a href=&quot;https://github.com/gist/1252946&quot;&gt;redirected&lt;/a&gt;.&lt;/body&gt;&lt;/html&gt;</code></pre></noscript></div>
</p>

<p>実機ではこんなふうになります。2.0, 1.5, 1.0の3つのサンプルです。</p>

<p><img src="http://www.kinopyo.com/wp-content/uploads/2011/09/scale-checkbox-in-iphone-safari.jpg" alt="" /></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[各画像を一つにまとめてbackground-positionで指定するのは？]]></title>
    <link href="http://kinopyo.com/blog/merge-images-and-icons-into-one-file-and-use-background-positon-to-select"/>
    <updated>2010-05-08T00:00:00+09:00</updated>
    <id>http://kinopyo.com/blog/merge-images-and-icons-into-one-file-and-use-background-positon-to-select</id>
    <content type="html"><![CDATA[<p>まずGoogleが実際使っている画像ファイルを見てみましょう。</p>

<p><img src="http://www.google.co.jp/images/srpr/nav_logo13.png" alt="Googleの各アイコン" /></p>

<p>いろんな画像、アイコンが混じっていますね。
そして実際使うときはCSSのbackground-positionで表示するモノを指定しているようです。
例えば検索結果の星マークのCSSを見ると</p>

<p><code>html
background-position: -117px -117px;
</code></p>

<p>Webサーバとのコネクションが1回で済むので、
それが狙いですね。</p>

<p>background-positionに関しての説明は：
<a href="http://www.htmq.com/style/background-position.shtml">http://www.htmq.com/style/background-position.shtml</a></p>

<p>ちなみにこういることをやってくれるライブラリもあるようです。
使ったことはまだないですけど。
<a href="http://csssprites.org/">http://csssprites.org/</a></p>
]]></content>
  </entry>
  
</feed>

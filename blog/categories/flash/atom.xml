<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Flash | Kinopyo Blog]]></title>
  <link href="http://kinopyo.com/blog/categories/flash/atom.xml" rel="self"/>
  <link href="http://kinopyo.com/"/>
  <updated>2014-12-31T12:59:48+09:00</updated>
  <id>http://kinopyo.com/</id>
  <author>
    <name><![CDATA[Qihuan Piao]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Flash，JSONでのクロスドメインアクセス勉強メモ]]></title>
    <link href="http://kinopyo.com/blog/memo-of-flash-json-cross-domain"/>
    <updated>2009-11-24T00:00:00+09:00</updated>
    <id>http://kinopyo.com/blog/memo-of-flash-json-cross-domain</id>
    <content type="html"><![CDATA[<p>gihyoサイトの「ここが危ない！Web2.0のセキュリティ」連載の<a href="http://gihyo.jp/dev/serial/01/web20sec/0004" target="_blank">第4回：「Flash，JSONでのクロスドメインアクセス」の</a>勉強メモです。</p>

<h2>Flashのクロスドメインアクセス</h2>

<h3>動作原理</h3>

<p>データ提供側で認証のファイルを設置するだけです。
ファイル名は「crossdomain.xml」で、これが例なのかこう書かなければならないのかは明確に書いてません。</p>

<p>```xml
<cross-domain-policy></p>

<pre><code>&lt;allow-access-from domain="www.securesky-tech.com" /&gt;
</code></pre>

<p></cross-domain-policy>
```</p>

<h2>JSONでも実はクロスドメインアクセスが可能</h2>

<h3>動作原理</h3>

<p>eval()関数でデータを評価するだけで使用可能になる</p>

<p><code>js
var obj = eval("("+req.responseText+")");
</code></p>

<h3>クロスドメインの実現</h3>

<p>setterメソッドをサポートしているブラウザ（FirefoxやSafari 3等）では，setterメソッドを再定義することによって，JSONもSCRIPTタグで呼び出して使うことが可能になる。</p>

<p>```html
<html></p>

<pre><code>&lt;script&gt;
    Object.prototype.__defineSetter__('name', function(x){sendtoAttacker(x);});
&lt;/script&gt;
&lt;script src="http://www.securesky-tech.com/object.dat"&gt;
&lt;/script&gt;
</code></pre>

<p></html>
```</p>
]]></content>
  </entry>
  
</feed>

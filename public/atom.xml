<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Yet Another Kinopyo Blog]]></title>
  <link href="http://kinopyo.github.com/atom.xml" rel="self"/>
  <link href="http://kinopyo.github.com/"/>
  <updated>2012-08-23T13:43:26+09:00</updated>
  <id>http://kinopyo.github.com/</id>
  <author>
    <name><![CDATA[Qihuan Piao]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Upgrading to Rails 3.2 from 3.1]]></title>
    <link href="http://kinopyo.github.com/blog/upgrade-to-rails-3-dot-2-from-3-dot-1/"/>
    <updated>2012-08-23T12:55:00+09:00</updated>
    <id>http://kinopyo.github.com/blog/upgrade-to-rails-3-dot-2-from-3-dot-1</id>
    <content type="html"><![CDATA[<p>Yesterday I upgraded one of my old-pending-hobby projects to latest Rails version, which is 3.2.8 now. Since I have several other projects in old version, I&#8217;d like to keep a note for what I&#8217;ve done.</p>

<p>As you can see in my <a href="https://github.com/kinopyo/NumberStory/commit/a11ab75263f7f74f703b377891dd0c8665bf3da5">commit</a>, all you have to do is update the version in <code>Gemfile</code> and hit <code>bundle update</code> in your terminal.</p>

<figure class='code'><figcaption><span>Gemfile</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">gem</span> <span class="s1">&#39;rails&#39;</span><span class="p">,</span> <span class="s1">&#39;3.2.0&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="n">group</span> <span class="ss">:assets</span> <span class="k">do</span>
</span><span class='line'>  <span class="n">gem</span> <span class="s1">&#39;sass-rails&#39;</span><span class="p">,</span> <span class="s2">&quot;  ~&gt; 3.2.3&quot;</span>
</span><span class='line'>  <span class="n">gem</span> <span class="s1">&#39;coffee-rails&#39;</span><span class="p">,</span> <span class="s2">&quot;~&gt; 3.2.1&quot;</span>
</span><span class='line'>  <span class="n">gem</span> <span class="s1">&#39;uglifier&#39;</span><span class="p">,</span> <span class="s1">&#39;&gt;= 1.0.3&#39;</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>Then add new configuration to <code>development.rb</code> and <code>test.rb</code> environment file. That&#8217;s all :)</p>

<figure class='code'><figcaption><span>config/environments/development.rb</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'>  <span class="c1"># Log the query plan for queries taking more than this (works</span>
</span><span class='line'>  <span class="c1"># with SQLite, MySQL, and PostgreSQL)</span>
</span><span class='line'>  <span class="n">config</span><span class="o">.</span><span class="n">active_record</span><span class="o">.</span><span class="n">auto_explain_threshold_in_seconds</span> <span class="o">=</span> <span class="mi">0</span><span class="o">.</span><span class="mi">5</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1"># Do not compress assets</span>
</span><span class='line'>  <span class="n">config</span><span class="o">.</span><span class="n">assets</span><span class="o">.</span><span class="n">compress</span> <span class="o">=</span> <span class="kp">false</span>
</span></code></pre></td></tr></table></div></figure>


<figure class='code'><figcaption><span>config/environments/test.rb</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='diff'><span class='line'><span class="gd">-  # Allow pass debug_assets=true as a query parameter to load pages with unpackaged assets</span>
</span><span class='line'><span class="gd">-  config.assets.allow_debugging = true</span>
</span><span class='line'>
</span><span class='line'><span class="gi">+  # Raise exception on mass assignment protection for Active Record models</span>
</span><span class='line'><span class="gi">+  config.active_record.mass_assignment_sanitizer = :strict</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Finding an array of ids while keeping the order with Rails]]></title>
    <link href="http://kinopyo.github.com/blog/finding-an-array-of-ids-while-keeping-the-order-with-rails/"/>
    <updated>2012-08-14T15:13:00+09:00</updated>
    <id>http://kinopyo.github.com/blog/finding-an-array-of-ids-while-keeping-the-order-with-rails</id>
    <content type="html"><![CDATA[<h2>The order may different</h2>

<p>Suppose you&#8217;re retrieving records using array of <code>ids</code>.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">ids</span> <span class="o">=</span> <span class="o">[</span><span class="mi">100</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">6</span><span class="o">]</span>
</span><span class='line'><span class="no">User</span><span class="o">.</span><span class="n">where</span><span class="p">(</span><span class="ss">:id</span> <span class="o">=&gt;</span> <span class="n">ids</span><span class="p">)</span><span class="o">.</span><span class="n">map</span><span class="p">(</span><span class="o">&amp;</span><span class="ss">:id</span><span class="p">)</span>
</span><span class='line'><span class="c1"># =&gt; [1, 6, 100]</span>
</span></code></pre></td></tr></table></div></figure>


<p>The order of the data may different from <code>ids</code> array, <strong>what if you want to keep its order</strong>?</p>

<h2>for MySQL</h2>

<p>There is a function in mysql called <a href="http://dev.mysql.com/doc/refman/5.0/en/string-functions.html#function%5Ffield">FIELD()</a></p>

<blockquote><p> FIELD(str,str1,str2,str3,&#8230;)
Returns the index (position) of str in the str1, str2, str3, &#8230; list. Returns 0 if str is not found.</p></blockquote>

<p>So by combing this <code>FIELD()</code> function, here is the code.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">ids</span> <span class="o">=</span> <span class="o">[</span><span class="mi">100</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">6</span><span class="o">]</span>
</span><span class='line'><span class="no">User</span><span class="o">.</span><span class="n">where</span><span class="p">(</span><span class="ss">:id</span> <span class="o">=&gt;</span> <span class="n">ids</span><span class="p">)</span><span class="o">.</span><span class="n">order</span><span class="p">(</span><span class="s2">&quot;field(id, </span><span class="si">#{</span><span class="n">ids</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="s1">&#39;,&#39;</span><span class="p">)</span><span class="si">}</span><span class="s2">)&quot;</span><span class="p">)</span><span class="o">.</span><span class="n">map</span><span class="p">(</span><span class="o">&amp;</span><span class="ss">:id</span><span class="p">)</span>
</span><span class='line'><span class="c1"># =&gt; [100, 1, 6]</span>
</span></code></pre></td></tr></table></div></figure>


<p>This will generate SQL below:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sql'><span class='line'><span class="k">SELECT</span> <span class="o">`</span><span class="n">users</span><span class="o">`</span><span class="p">.</span><span class="o">*</span> <span class="k">FROM</span> <span class="o">`</span><span class="n">users</span><span class="o">`</span> <span class="k">WHERE</span> <span class="o">`</span><span class="n">users</span><span class="o">`</span><span class="p">.</span><span class="o">`</span><span class="n">id</span><span class="o">`</span> <span class="k">IN</span> <span class="p">(</span><span class="mi">100</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">6</span><span class="p">)</span> <span class="k">ORDER</span> <span class="k">BY</span> <span class="n">field</span><span class="p">(</span><span class="n">id</span><span class="p">,</span> <span class="mi">100</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">6</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<h2>for other databases</h2>

<p>I didn&#8217;t dig too much but most of google results suggest just sort it manually using ruby.
Here is just an example:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">ids</span> <span class="o">=</span> <span class="o">[</span><span class="mi">100</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">6</span><span class="o">]</span>
</span><span class='line'><span class="n">users</span> <span class="o">=</span> <span class="no">User</span><span class="o">.</span><span class="n">where</span><span class="p">(</span><span class="ss">:id</span> <span class="o">=&gt;</span> <span class="n">ids</span><span class="p">)</span>
</span><span class='line'><span class="n">users</span> <span class="o">=</span> <span class="n">ids</span><span class="o">.</span><span class="n">map</span> <span class="p">{</span><span class="o">|</span><span class="nb">id</span><span class="o">|</span> <span class="n">users</span><span class="o">.</span><span class="n">detect</span> <span class="p">{</span><span class="o">|</span><span class="n">user</span><span class="o">|</span> <span class="n">user</span><span class="o">.</span><span class="n">id</span> <span class="o">==</span> <span class="nb">id</span> <span class="p">}</span> <span class="p">}</span>
</span><span class='line'><span class="n">users</span><span class="o">.</span><span class="n">map</span><span class="p">(</span><span class="o">&amp;</span><span class="ss">:id</span><span class="p">)</span>
</span><span class='line'><span class="c1"># =&gt; [100, 1, 6]</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[How to reset zoom in chrome]]></title>
    <link href="http://kinopyo.github.com/blog/how-to-reset-zoom-in-chrome/"/>
    <updated>2012-08-03T14:49:00+09:00</updated>
    <id>http://kinopyo.github.com/blog/how-to-reset-zoom-in-chrome</id>
    <content type="html"><![CDATA[<p><code>cmd + 0</code> in mac :)</p>

<p>If you click the tool icon on the right of the address bar, you can also check the current zoom rate.</p>

<p><img src="https://img.skitch.com/20120803-1ew92g41qdw65n6iecywgwun6u.jpg" title="'Google Chrome Check Zoom Rate'" ></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[How to disable auto correct in oh-my-zsh]]></title>
    <link href="http://kinopyo.github.com/blog/how-to-disable-auto-correct-in-zsh/"/>
    <updated>2012-07-20T20:35:00+09:00</updated>
    <id>http://kinopyo.github.com/blog/how-to-disable-auto-correct-in-zsh</id>
    <content type="html"><![CDATA[<p><a href="https://github.com/robbyrussell/oh-my-zsh">oh-my-zsh</a> is very handy and I&#8217;ve been using it for almost a year.</p>

<p>But I found the auto correct is kind of annoying and barely helped me. So I decided to turn if off!</p>

<h2>Disable it globally</h2>

<p>Add this <code>unsetopt</code> to your ~/.zshrc</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nb">source</span> <span class="nv">$ZSH</span>/oh-my-zsh.sh
</span><span class='line'>
</span><span class='line'>unsetopt correct_all
</span></code></pre></td></tr></table></div></figure>


<h2>Disable it per command base</h2>

<p>Say if you just want to disable it for <code>git</code> command, you can setup an alias.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nb">alias </span><span class="nv">git</span><span class="o">=</span>’nocorrect heroku’
</span></code></pre></td></tr></table></div></figure>


<p>I didn&#8217;t test out this one :)</p>

<h3>References:</h3>

<ul>
<li><a href="https://github.com/robbyrussell/oh-my-zsh/issues/534">Issue #534: auto-correcting sucks hard · robbyrussell/oh-my-zsh</a></li>
<li><a href="https://github.com/robbyrussell/oh-my-zsh/issues/949">Issue #949: Disable autocorrect lg to log · robbyrussell/oh-my-zsh</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Machinist 1.0: How to generate an object without saving it to the database]]></title>
    <link href="http://kinopyo.github.com/blog/machinist-how-to-generate-an-object-without-saving-it-to-the-database/"/>
    <updated>2012-07-20T20:12:00+09:00</updated>
    <id>http://kinopyo.github.com/blog/machinist-how-to-generate-an-object-without-saving-it-to-the-database</id>
    <content type="html"><![CDATA[<p><strong>CAUTION</strong> It&#8217;s specific machinist 1.0-maintenance.</p>

<p>Machinist is an alternative for Fixtures or FactoryGirl.</p>

<h2>make_unsaved</h2>

<blockquote><p>If you want to generate an object without saving it to the database, replace <code>make</code> with <code>make_unsaved</code></p></blockquote>

<p><a href="https://github.com/notahat/machinist/tree/1.0-maintenance#blueprints---generating-objects">reference</a></p>

<p>So remember to use <code>make_unsaved</code>.</p>

<h3>More</h3>

<p>If you&#8217;re interested, here is the source code.</p>

<ul>
<li><a href="https://github.com/notahat/machinist/blob/1.0-maintenance/lib/machinist/active_record.rb#L61">https://github.com/notahat/machinist/blob/1.0-maintenance/lib/machinist/active_record.rb#L61</a></li>
<li><a href="https://github.com/notahat/machinist/blob/1.0-maintenance/lib/machinist.rb#L107">https://github.com/notahat/machinist/blob/1.0-maintenance/lib/machinist.rb#L107</a></li>
</ul>


<h2>Under latest version</h2>

<p>Well if you&#8217;re using latest machinist, which is 2.0 at this point, it&#8217;s much simpler and cleaner.</p>

<p><code>make</code> for generating but not saving an object, <code>make!</code> for saving it to database.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Escape square brackets by default in zsh]]></title>
    <link href="http://kinopyo.github.com/blog/escape-square-bracket-by-default-in-zsh/"/>
    <updated>2012-07-08T18:45:00+09:00</updated>
    <id>http://kinopyo.github.com/blog/escape-square-bracket-by-default-in-zsh</id>
    <content type="html"><![CDATA[<h2>Square brackets in zsh</h2>

<p>Square brackets in zsh have special meanings but in MOST circumstances maybe you just have to escape them by putting <code>\</code>(backslash) before them.</p>

<h3>Here is a example for generating a new octopress post</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>rake new_post<span class="o">[</span><span class="s2">&quot;Escape square bracket by default in zsh&quot;</span><span class="o">]</span>
</span><span class='line'>zsh: no matches found: new_post<span class="o">[</span>Escape square bracket by default in zsh<span class="o">]</span>
</span><span class='line'>
</span><span class='line'>rake new_post<span class="se">\[</span><span class="s2">&quot;Escape square bracket by default in zsh&quot;</span><span class="se">\]</span>
</span><span class='line'>mkdir -p <span class="nb">source</span>/_posts
</span><span class='line'>Creating new post: <span class="nb">source</span>/_posts/2012-07-08-escape-square-bracket-by-default-in-zsh.markdown
</span></code></pre></td></tr></table></div></figure>


<h2>How to escape by default?</h2>

<p>Just setup this alias in your <code>.zshrc</code>.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nb">alias </span><span class="nv">rake</span><span class="o">=</span><span class="s1">&#39;noglob rake&#39;</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Bootswatch - A simple solution to customize Bootstrap color]]></title>
    <link href="http://kinopyo.github.com/blog/bootswatch-simple-solution-to-custimze-bootstrap-color/"/>
    <updated>2012-07-03T18:17:00+09:00</updated>
    <id>http://kinopyo.github.com/blog/bootswatch-simple-solution-to-custimze-bootstrap-color</id>
    <content type="html"><![CDATA[<p>Recently I found this website called <strong><a href="http://bootswatch.com/">Bootswatch</a></strong>, which is really helpful when you want to add color(or say different theme) to your bootstrap project. There is also a <a href="https://wrapbootstrap.com/">marketplace</a> for you to buy/sell themes.</p>

<p>I&#8217;ll definetly try one next time I use bootstrap.</p>

<p><img src="https://img.skitch.com/20120703-cjc4d2ndgng626am5t46yc9b7m.jpg"></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Run Ruby Script in Rails Environment]]></title>
    <link href="http://kinopyo.github.com/blog/run-ruby-script-in-rails-environment/"/>
    <updated>2012-06-29T18:04:00+09:00</updated>
    <id>http://kinopyo.github.com/blog/run-ruby-script-in-rails-environment</id>
    <content type="html"><![CDATA[<h2>Overview</h2>

<p>If you wanna execute some ruby code in rails environment, say manipulate w/ model or something, you can always try <code>rake task</code> first. But there&#8217;re circumstances you don&#8217;t want to use it, maybe it&#8217;s just a one-time script that you don&#8217;t want to save it to git, or whatever.</p>

<p>I&#8217;ve found out there&#8217;re two simple ways to accomplish it.</p>

<h2>require config/environment.rb</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># test.rb</span>
</span><span class='line'><span class="nb">require</span> <span class="s2">&quot;config/environment&quot;</span>
</span><span class='line'><span class="nb">p</span> <span class="no">User</span><span class="o">.</span><span class="n">first</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># in terminal</span>
</span><span class='line'><span class="n">ruby</span> <span class="nb">test</span><span class="o">.</span><span class="n">rb</span>
</span></code></pre></td></tr></table></div></figure>


<h2>use rails runner</h2>

<p><a href="http://guides.rubyonrails.org/command_line.html#rails-runner">Rails Guides about rails runner</a></p>

<blockquote><p>runner runs Ruby code in the context of Rails non-interactively. For instance:</p></blockquote>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">rails</span> <span class="n">runner</span> <span class="s2">&quot;p User.first&quot;</span>
</span><span class='line'><span class="n">rails</span> <span class="n">runner</span> <span class="n">some_ruby_script</span><span class="o">.</span><span class="n">rb</span>
</span><span class='line'><span class="n">rails</span> <span class="n">runner</span> <span class="o">-</span><span class="n">e</span> <span class="n">staging</span> <span class="s2">&quot;Model.long_running_method&quot;</span>
</span><span class='line'><span class="n">rails</span> <span class="n">runner</span> <span class="o">-</span><span class="n">h</span>
</span></code></pre></td></tr></table></div></figure>


<blockquote><p>You can also use the alias “r” to invoke the runner: <code>rails r</code>.</p></blockquote>

<p>I failed to call <code>rails r</code> on Rails 3.0.10, maybe it&#8217;s above 3.1+.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Explicitly specify table name in scope definition]]></title>
    <link href="http://kinopyo.github.com/blog/someone-is-leaving/"/>
    <updated>2012-06-29T15:56:00+09:00</updated>
    <id>http://kinopyo.github.com/blog/someone-is-leaving</id>
    <content type="html"><![CDATA[<p>I was wondering why people explicitly specify table name in such a scope definition&#8230;</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">Answer</span> <span class="o">&lt;</span> <span class="no">ActiveRecord</span><span class="o">::</span><span class="no">Base</span>
</span><span class='line'>  <span class="n">scope</span> <span class="ss">:recent</span><span class="p">,</span> <span class="n">order</span><span class="p">(</span><span class="s1">&#39;answers.created_at DESC&#39;</span><span class="p">)</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>Until I got this error today.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sql'><span class='line'><span class="n">Mysql2</span><span class="p">::</span><span class="n">Error</span><span class="p">:</span> <span class="k">Column</span> <span class="s1">&#39;created_at&#39;</span> <span class="k">in</span> <span class="k">order</span> <span class="n">clause</span> <span class="k">is</span> <span class="n">ambiguous</span><span class="p">:</span> <span class="k">SELECT</span>  <span class="k">COUNT</span><span class="p">(</span><span class="k">DISTINCT</span> <span class="o">`</span><span class="n">answers</span><span class="o">`</span><span class="p">.</span><span class="o">`</span><span class="n">id</span><span class="o">`</span><span class="p">)</span> <span class="k">AS</span> <span class="n">count_id</span><span class="p">,</span> <span class="n">question_id</span> <span class="k">AS</span> <span class="n">question_id</span> <span class="k">FROM</span> <span class="o">`</span><span class="n">answers</span><span class="o">`</span> <span class="k">LEFT</span> <span class="k">OUTER</span> <span class="k">JOIN</span> <span class="o">`</span><span class="n">questions</span><span class="o">`</span> <span class="k">ON</span> <span class="o">`</span><span class="n">questions</span><span class="o">`</span><span class="p">.</span><span class="o">`</span><span class="n">id</span><span class="o">`</span> <span class="o">=</span> <span class="o">`</span><span class="n">answers</span><span class="o">`</span><span class="p">.</span><span class="o">`</span><span class="n">question_id</span><span class="o">`</span> <span class="k">WHERE</span> <span class="p">(</span><span class="o">`</span><span class="n">answers</span><span class="o">`</span><span class="p">.</span><span class="n">user_id</span> <span class="o">=</span> <span class="mi">87</span><span class="p">)</span> <span class="k">GROUP</span> <span class="k">BY</span> <span class="n">question_id</span> <span class="k">ORDER</span> <span class="k">BY</span> <span class="n">created_at</span> <span class="k">DESC</span> <span class="k">LIMIT</span> <span class="mi">10</span>
</span></code></pre></td></tr></table></div></figure>


<p>I have a <code>recent</code> scope defined in both <code>Question</code> and <code>Answer</code> model. And when you chain those two models, rails don&#8217;t know the <code>recent</code> is associated to which one.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="vi">@answers</span> <span class="o">=</span> <span class="vi">@user</span><span class="o">.</span><span class="n">answers</span><span class="o">.</span><span class="n">recent</span><span class="o">.</span><span class="n">group</span><span class="p">(</span><span class="ss">:question_id</span><span class="p">)</span><span class="o">.</span><span class="n">includes</span><span class="p">(</span><span class="ss">:question</span><span class="p">)</span><span class="o">.</span><span class="n">limit</span><span class="p">(</span><span class="mi">10</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
</feed>

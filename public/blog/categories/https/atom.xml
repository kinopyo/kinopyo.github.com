<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: https | Yet Another Kinopyo Blog]]></title>
  <link href="http://kinopyo.com/blog/categories/https/atom.xml" rel="self"/>
  <link href="http://kinopyo.com/"/>
  <updated>2012-09-23T03:29:40+09:00</updated>
  <id>http://kinopyo.com/</id>
  <author>
    <name><![CDATA[Qihuan Piao]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Nokogiriでhttpsプロトコールのコンテンツを取得]]></title>
    <link href="http://kinopyo.com/blog/get-https-contents-with-nokogiri"/>
    <updated>2011-06-27T00:00:00+09:00</updated>
    <id>http://kinopyo.com/blog/get-https-contents-with-nokogiri</id>
    <content type="html"><![CDATA[<p>Nokogiriでurlをparseするときは普通こんなコードになります。</p>

<p>```ruby
doc = Nokogiri::HTML(open('http://example.com/'))</p>

<p>```</p>

<p>しかし接続先のプロトコールがhttpsの場合はNo such file or directoryのエラーとなります。
一旦net/httpsで取ってからそれをnokogiriでparseするような工夫が必要です。</p>

<p><div><script src='https://gist.github.com/1037492.js?file='></script>
<noscript><pre><code>require 'net/https'
require 'nokogiri'

url = &quot;https://example.com&quot;
url = URI.parse( url )
http = Net::HTTP.new( url.host, url.port )
http.use_ssl = true if url.port == 443
http.verify_mode = OpenSSL::SSL::VERIFY_NONE if url.port == 443
path = url.path
path += &quot;?&quot; + url.query unless url.query.nil?
res, data = http.get( path )

case res
  when Net::HTTPSuccess, Net::HTTPRedirection
    # parse link
    doc = Nokogiri::HTML(data)
     # do what you want ...
  else
    return &quot;failed&quot; + res.to_s
end</code></pre></noscript></div>
</p>
]]></content>
  </entry>
  
</feed>

<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: jQuery | Yet Another Kinopyo Blog]]></title>
  <link href="http://kinopyo.github.com/blog/categories/jquery/atom.xml" rel="self"/>
  <link href="http://kinopyo.github.com/"/>
  <updated>2012-08-29T01:53:12+09:00</updated>
  <id>http://kinopyo.github.com/</id>
  <author>
    <name><![CDATA[Qihuan Piao]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[jQuery checkbox checked event]]></title>
    <link href="http://kinopyo.github.com/blog/jquery-checkbox-checked-event"/>
    <updated>2011-11-22T00:00:00+09:00</updated>
    <id>http://kinopyo.github.com/blog/jquery-checkbox-checked-event</id>
    <content type="html"><![CDATA[<p>jQueryでチェックボックスの状態を監視するイベントは<em>click event</em>を使う。
チェックされたかを判断するには<em>$("#some_checkbox").is(':checked')</em>がいい。</p>

<p>CoffeeScriptでのサンプルコード：
<div><script src='https://gist.github.com/1385217.js?file='></script>
<noscript><pre><code>$(&quot;#some_checkbox&quot;).click (e) -&gt;
  if $(this).is(':checked')
    # actions when checked
  else
    # actions when not checked</code></pre></noscript></div>
</p>

<p><em>change event</em>も監視はできるが、取れる値は遅延されるみたいです。</p>

<p><blockquote><p>The change event is sent to an element when its value changes. This event is limited to input elements, textarea boxes and select elements. For select boxes, checkboxes, and radio buttons, the event is fired immediately when the user makes a selection with the mouse, but for the other element types the event is deferred until the element loses focus.</p></blockquote></p>

<p>参考：<a href="http://forum.jquery.com/topic/jquery-checkbox-checked-event">http://forum.jquery.com/topic/jquery-checkbox-checked-event</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[iPhone Safariキーボードの"Return"のkeydownイベントをキャッチ]]></title>
    <link href="http://kinopyo.github.com/blog/how-to-catch-return-keydown-event-of-iphone-safari"/>
    <updated>2011-10-25T00:00:00+09:00</updated>
    <id>http://kinopyo.github.com/blog/how-to-catch-return-keydown-event-of-iphone-safari</id>
    <content type="html"><![CDATA[<h2>Situation</h2>

<p>iPhone Safariを使うときにあるInput boxで何か入力後"return"キーのkeydownイベントをキャッチして、何かしらのアクションを行いたい、のが目的です。よくあるのがreturnキーでformをsubmitしたり、ボタンクリックのアクションを行ったり、キーボードを隠したりするところですかね。</p>

<h2>Keydown event</h2>

<p><div><script src='https://gist.github.com/.js?file='></script>
<noscript><pre><code>&lt;html&gt;&lt;body&gt;You are being &lt;a href=&quot;https://github.com/gist&quot;&gt;redirected&lt;/a&gt;.&lt;/body&gt;&lt;/html&gt;</code></pre></noscript></div>
</p>

<p><em>13</em>という数字がreturnキーのkeydown時のコードです。実はJavascript経験がある方ならすぐ分かると思いますが、<em>13</em>は<em>Enterキー</em>のコードでもあります。</p>

<p>もう一つのTipはキーボードを隠したいときはjQueryの<em>blur()</em>を使えばOKです。</p>

<p>参考：<a href="http://stackoverflow.com/questions/5932317/how-to-capture-the-keyboard-return-event-on-iphone-browser">http://stackoverflow.com/questions/5932317/how-to-capture-the-keyboard-return-event-on-iphone-browser</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[CoffeeScriptでjQueryのdocument.readyの書き方]]></title>
    <link href="http://kinopyo.github.com/blog/coffeescript-jquery-document-ready"/>
    <updated>2011-07-09T00:00:00+09:00</updated>
    <id>http://kinopyo.github.com/blog/coffeescript-jquery-document-ready</id>
    <content type="html"><![CDATA[<p>下記どちらもOKです。明示的に書きたいときはjQueryで。</p>

<p><div><script src='https://gist.github.com/1073555.js?file=coffee-script-jquery-document-ready'></script>
<noscript><pre><code>jQuery -&gt;
  alert &quot;hello&quot;

$ -&gt;
  alert &quot;hello&quot;</code></pre></noscript></div>
</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[jQueryでselectorと一致する最初のものを取る]]></title>
    <link href="http://kinopyo.github.com/blog/jquery-selector-get-the-first-matched-element"/>
    <updated>2011-07-02T00:00:00+09:00</updated>
    <id>http://kinopyo.github.com/blog/jquery-selector-get-the-first-matched-element</id>
    <content type="html"><![CDATA[<p>一年くらい使ってなかったので、ほぼ忘れてしまいました。そのためのメモという感じです。</p>

<p>```javascript
// idがwrapperの中の最初のdivを取る
$("#wrapper").find("div:first")</p>

<p>```</p>

<p>この:xxxがBasic Filter(基本フィルタ)と読んで、他にもいろいろあります。
<blockquote><p>:first 先頭の要素を選択する。<br/>:last 末尾の要素を選択する。<br/>:not(selector) 指定したセレクターを除外した要素を選択する。<br/>:even 偶数番の要素を選択する。<br/>:odd 奇数番の要素を選択する。<br/>:eq(index) インデックス指定した要素を選択する。<br/>:gt(index) 指定したインデックスより後の要素を選択する。<br/>:lt(index) 指定したインデックスより前の要素を選択する。<br/>:header h1,h2などのヘッダ要素を選択する。<br/>:animated アニメーション中の要素を選択する。</p></blockquote>
<a href="http://api.jquery.com/category/selectors/basic-filter-selectors/">英語API</a>
<a href="http://semooh.jp/jquery/api/selectors/">日本語API</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[jQuery: append(prepend,appendTo,prependTo)とafter(before,insertAfter,insertBefore)の違い]]></title>
    <link href="http://kinopyo.github.com/blog/jquery-difference-between-append-and-after"/>
    <updated>2010-12-01T00:00:00+09:00</updated>
    <id>http://kinopyo.github.com/blog/jquery-difference-between-append-and-after</id>
    <content type="html"><![CDATA[<p>jQueryのappendやafterは全部DOM Manipulation、つまりDOM操作のメソッドであります。どう違うかは下記ソースコードを見るのが一番速いでしょう。</p>

<h2>append(prepend,appendTo,prependTo)は要素内に、子供要素として貼り付ける</h2>

<p>```javascript
$('<span>span text</span>').appendTo(".chapter");</p>

<p>```</p>

<p>```html</p>

<div class="chapter"> ... </div>


<p>```</p>

<p>組み立てた結果：</p>

<p>```html</p>

<div class="chapter">
    ...
    <span>span text</span>
</div>


<p>```</p>

<p>append、appendToは最後の子供要素として、prepend、prependToは最初の子供要素として挿入する感じです。</p>

<h2>after(before,insertAfter,insertBefore)は要素の外、つまり同一のレベルで兄弟要素として貼り付ける</h2>

<p>```javascript
$('<span>span text</span>').insertAfter(".chapter");</p>

<p>```
組み立てた結果：</p>

<p>```html</p>

<div class="chapter">
    ...
    <span>span text</span>
</div>


<p>```</p>

<h2>htmlタグがなければ無効</h2>

<p>```javascript
$('some text').appendTo(".chapter");</p>

<p>```</p>

<p>htmlに何の変更もないです。</p>
]]></content>
  </entry>
  
</feed>

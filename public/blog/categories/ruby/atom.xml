<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Ruby | Yet Another Kinopyo Blog]]></title>
  <link href="http://kinopyo.com/blog/categories/ruby/atom.xml" rel="self"/>
  <link href="http://kinopyo.com/"/>
  <updated>2012-08-31T22:50:41+09:00</updated>
  <id>http://kinopyo.com/</id>
  <author>
    <name><![CDATA[Qihuan Piao]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Rails RSpec: Postgresqlでrake specするとNOTICEの警告がいっぱい出た]]></title>
    <link href="http://kinopyo.com/blog/rails-rspec-postgresql-turn-offrake-spec-warnings-notice"/>
    <updated>2012-03-29T00:00:00+09:00</updated>
    <id>http://kinopyo.com/blog/rails-rspec-postgresql-turn-offrake-spec-warnings-notice</id>
    <content type="html"><![CDATA[<p><a href="http://d.hatena.ne.jp/arcright/20110623/1308796154">PostgresSQLでrake specするとNOTICEがいっぱいでる</a>が大変参考になった。</p>

<p><blockquote><p>NOTICE:  CREATE TABLE will create implicit sequence "peroperos_id_seq" for serial column "peroperos.id"<br/>NOTICE:  CREATE TABLE / PRIMARY KEY will create implicit index "peroperos_pkey" for table "peroperos"<br/>～略～</p></blockquote>
の警告をシャットダウンする方法です。</p>

<p><div><script src='https://gist.github.com/2232851.js?file='></script>
<noscript><pre><code># add min_messages to test env

test:
  adapter: postgresql
  encoding: unicode
  database: homu_test
  pool: 5
  username: postgres
  password:
  min_messages: warning</code></pre></noscript></div>
</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Railsテスト時のrack警告"warning: regexp match /.../n against to UTF-8 string"を消す方法]]></title>
    <link href="http://kinopyo.com/blog/rails-test-quietrack-warning"/>
    <updated>2012-03-23T00:00:00+09:00</updated>
    <id>http://kinopyo.com/blog/rails-test-quietrack-warning</id>
    <content type="html"><![CDATA[<p>Rails 3.1以前のバージョンなら多分テスト実行時にこういう警告が出ることがあるかもしれません。
<div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>gems/rack-1.2.5/lib/rack/utils.rb:16: warning: regexp match /.../n against to UTF-8 string</span></code></pre></td></tr></table></div></figure></notextile></div>
このうるさい警告を消す方法を紹介します。</p>

<h2>解決方法</h2>

<p>rspecを使う場合はspec/spec_helper.rbに下記コードを最後に追記してください。
<div><script src='https://gist.github.com/2168152.js?file='></script>
<noscript><pre><code>
RSpec.configure do |config|
  # ...
end

# quick hack to get Rack to be quiet about &quot;warning: regexp match /.../n against to UTF-8 string&quot; until we upgrade to Rails 3.1 with Rack 1.3
module Rack
  module Utils
    def escape(s)
      CGI.escape(s.to_s)
    end
    def unescape(s)
      CGI.unescape(s)
    end
  end
end</code></pre></noscript></div>
</p>

<h2>原因</h2>

<p>Rack1.3からは解決できたらしいですが、Rails 3.1以前を使うならとりあえずこの方法で回避してもいいかと。
詳しくは：<a href="https://github.com/rack/rack/issues/41">https://github.com/rack/rack/issues/41</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[FactoryGirl: How to define a value based on an already defined one]]></title>
    <link href="http://kinopyo.com/blog/factorygirl-how-to-define-a-value-based-on-an-already-defined-one"/>
    <updated>2012-01-26T00:00:00+09:00</updated>
    <id>http://kinopyo.com/blog/factorygirl-%e6%97%a2%e3%81%ab%e5%ae%9a%e7%be%a9%e3%81%97%e3%81%9f%e5%80%a4%e3%82%92%e3%83%99%e3%83%bc%e3%82%b9%e3%81%ab%e3%81%97%e3%81%9f%e5%80%a4%e3%82%92%e8%a8%ad%e5%ae%9a%e3%81%99%e3%82%8b</id>
    <content type="html"><![CDATA[<p>FactoryGirlで既に定義した値を使おうとする時の方法です。
例えばLessonというクラスのstart_atとend_atの属性があり、start_atを定義した後はend_atをその2時間後に定義したい場合、ブロックでパラメータを渡せばそこでstart_atにアクセスできるようになります。</p>

<p><div><script src='https://gist.github.com/1680766.js?file='></script>
<noscript><pre><code># Say you have two columns: start_at, end_at
# When start_at is defined, you want end_at's value based on the start_at
# Here is the solution, passing a block to get the object of the context.

start_at Random.new.rand(14..45).days.from_now
end_at { |l| l.start_at + 2.hours }

# Full example
FactoryGirl.define do
  factory :lesson do
    sequence(:title) { |n| &quot;lesson title#{n}&quot; }
    sequence(:description) { |n| &quot;lesson description#{n}&quot; }
    capacity 6
    start_at Random.new.rand(14..45).days.from_now
    end_at { |l| l.start_at + 2.hours }
    price [5000, 5100, 5200, 5300, 5500, 6000].sample
  end
end</code></pre></noscript></div>
</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ruby how to encode url]]></title>
    <link href="http://kinopyo.com/blog/ruby-url-encode"/>
    <updated>2011-12-08T00:00:00+09:00</updated>
    <id>http://kinopyo.com/blog/ruby-url-encode</id>
    <content type="html"><![CDATA[<p><div><script src='https://gist.github.com/1445867.js?file='></script>
<noscript><pre><code>require 'cgi'
CGI.escape(url)</code></pre></noscript></div>
</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Rails asset hostsについて]]></title>
    <link href="http://kinopyo.com/blog/rails-using-asset-hosts"/>
    <updated>2011-11-09T00:00:00+09:00</updated>
    <id>http://kinopyo.com/blog/rails-using-asset-hosts</id>
    <content type="html"><![CDATA[<p><a href="http://api.rubyonrails.org/classes/ActionView/Helpers/AssetTagHelper.html">ActionView/Helpers/AssetTagHelper</a>、asset(画像、CSSなど)ホストのチューニングについての勉強メモです。</p>

<h2>asset hostを指定</h2>

<p>image_tag("rails.png")のhelper methodで生成するリンクはデフォルトでは同じホストのpublicフォルダを指しています。それを変更したい場合は<code>config/environments/production.rb</code>の<code>ActionController::Base.asset_host</code>をいじります。</p>

<p><code>ruby
ActionController::Base.asset_host = "assets.example.com"
</code></p>

<p>```erb
image_tag("rails.png")</p>

<h1>=> <img alt="Rails" src="http://assets.example.com/images/rails.png?1230601161" /></h1>

<p>```</p>

<h2>asset hostを複数指定</h2>

<p>ブラウザが一度に同一サーバには２つのコネクションしかできないそう（これは初めて知りました）で、asset同士のダウンロード完了するのを待たなければなりません。もし複数台のassetサーバがある場合は<code>assets%d.example.com</code>を使ってそれをコネクション数を増やせることができます。<code>%d</code>が指定されればRailsは0~3の４つの番号を付けて、並行して８つのコネクションができます。</p>

<p><code>ruby
ActionController::Base.asset_host = "assets%d.example.com"
</code></p>

<p>```erb
image_tag("rails.png")</p>

<h1>=> <img alt="Rails" src="http://assets.example.com/images/rails.png?1230601161" /></h1>

<p>stylesheet_link_tag("application")</p>

<h1>=> <link href="http://assets2.example.com/stylesheets/application.css?1232285206" media="screen" rel="stylesheet" type="text/css" /></h1>

<p>```</p>

<h2>カスタマイズ</h2>

<p>もっと自分でカスタマイズしたい場合は<code>source</code>のprocパラメータを使えます。</p>

<p>```ruby
ActionController::Base.asset_host = Proc.new { |source|
  "http://assets#{Digest::MD5.hexdigest(source).to_i(16) % 2 + 1}.example.com"
}
image_tag("rails.png")</p>

<h1>=> <img alt="Rails" src="http://assets1.example.com/images/rails.png?1230601161" /></h1>

<p>stylesheet_link_tag("application")</p>

<h1>=> <link href="http://assets2.example.com/stylesheets/application.css?1232285206" media="screen" rel="stylesheet" type="text/css" /></h1>

<p>```</p>

<p>特定のパスで始まるassetを特定のホストに指定する例：
```ruby
ActionController::Base.asset_host = Proc.new { |source|
   if source.starts_with?('/images')</p>

<pre><code> "http://images.example.com"
</code></pre>

<p>   else</p>

<pre><code> "http://assets.example.com"
</code></pre>

<p>   end
 }
```</p>

<p>```erb
image_tag("rails.png")</p>

<h1>=> <img alt="Rails" src="http://images.example.com/images/rails.png?1230601161" /></h1>

<p>stylesheet_link_tag("application")</p>

<h1>=> <link href="http://assets.example.com/stylesheets/application.css?1232285206" media="screen" rel="stylesheet" type="text/css" /></h1>

<p><code>``
さらに</code>request`の第二パラメータもあります。これでHTTPSの動作も制御できます。</p>

<p>```ruby
ActionController::Base.asset_host = Proc.new { |source, request|
  if request.ssl?</p>

<pre><code>"#{request.protocol}#{request.host_with_port}"
</code></pre>

<p>  else</p>

<pre><code>"#{request.protocol}assets.example.com"
</code></pre>

<p>  end
}
```</p>

<h2>Resources</h2>

<p>http://api.rubyonrails.org/classes/ActionView/Helpers/AssetTagHelper.html</p>
]]></content>
  </entry>
  
</feed>

<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: script | Yet Another Kinopyo Blog]]></title>
  <link href="http://kinopyo.github.com/blog/categories/script/atom.xml" rel="self"/>
  <link href="http://kinopyo.github.com/"/>
  <updated>2012-08-23T13:43:26+09:00</updated>
  <id>http://kinopyo.github.com/</id>
  <author>
    <name><![CDATA[Qihuan Piao]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Run Ruby Script in Rails Environment]]></title>
    <link href="http://kinopyo.github.com/blog/run-ruby-script-in-rails-environment/"/>
    <updated>2012-06-29T18:04:00+09:00</updated>
    <id>http://kinopyo.github.com/blog/run-ruby-script-in-rails-environment</id>
    <content type="html"><![CDATA[<h2>Overview</h2>

<p>If you wanna execute some ruby code in rails environment, say manipulate w/ model or something, you can always try <code>rake task</code> first. But there're circumstances you don't want to use it, maybe it's just a one-time script that you don't want to save it to git, or whatever.</p>

<p>I've found out there're two simple ways to accomplish it.</p>

<h2>require config/environment.rb</h2>

<p>```ruby</p>

<h1>test.rb</h1>

<p>require "config/environment"
p User.first</p>

<h1>in terminal</h1>

<p>ruby test.rb
```</p>

<h2>use rails runner</h2>

<p><a href="http://guides.rubyonrails.org/command_line.html#rails-runner">Rails Guides about rails runner</a></p>

<blockquote><p>runner runs Ruby code in the context of Rails non-interactively. For instance:</p></blockquote>

<p><code>ruby
rails runner "p User.first"
rails runner some_ruby_script.rb
rails runner -e staging "Model.long_running_method"
rails runner -h
</code></p>

<blockquote><p>You can also use the alias “r” to invoke the runner: <code>rails r</code>.</p></blockquote>

<p>I failed to call <code>rails r</code> on Rails 3.0.10, maybe it's above 3.1+.</p>
]]></content>
  </entry>
  
</feed>
